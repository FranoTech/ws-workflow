/* soapH.h
   Generated by gSOAP 2.8.2 from imgProcess.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_begin_send(soap) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_ns__RemoveSmallCell
#define SOAP_TYPE_ns__RemoveSmallCell (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__RemoveSmallCell(struct soap*, const char*, int, const ns__RemoveSmallCell *, const char*);
SOAP_FMAC3 ns__RemoveSmallCell * SOAP_FMAC4 soap_in_ns__RemoveSmallCell(struct soap*, const char*, ns__RemoveSmallCell *, const char*);

#ifndef soap_write_ns__RemoveSmallCell
#define soap_write_ns__RemoveSmallCell(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns:RemoveSmallCell", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns__RemoveSmallCell
#define soap_read_ns__RemoveSmallCell(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__RemoveSmallCell(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns__RemoveSmallCell * SOAP_FMAC4 soap_get_ns__RemoveSmallCell(struct soap*, ns__RemoveSmallCell *, const char*, const char*);

#define soap_new_ns__RemoveSmallCell(soap, n) soap_instantiate_ns__RemoveSmallCell(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__RemoveSmallCell(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns__RemoveSmallCell * SOAP_FMAC2 soap_instantiate_ns__RemoveSmallCell(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__RemoveSmallCell(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__FindContours
#define SOAP_TYPE_ns__FindContours (7)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__FindContours(struct soap*, const char*, int, const ns__FindContours *, const char*);
SOAP_FMAC3 ns__FindContours * SOAP_FMAC4 soap_in_ns__FindContours(struct soap*, const char*, ns__FindContours *, const char*);

#ifndef soap_write_ns__FindContours
#define soap_write_ns__FindContours(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns:FindContours", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns__FindContours
#define soap_read_ns__FindContours(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__FindContours(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns__FindContours * SOAP_FMAC4 soap_get_ns__FindContours(struct soap*, ns__FindContours *, const char*, const char*);

#define soap_new_ns__FindContours(soap, n) soap_instantiate_ns__FindContours(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__FindContours(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns__FindContours * SOAP_FMAC2 soap_instantiate_ns__FindContours(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__FindContours(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__scanningCell
#define SOAP_TYPE_ns__scanningCell (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__scanningCell(struct soap*, struct ns__scanningCell *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__scanningCell(struct soap*, const struct ns__scanningCell *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__scanningCell(struct soap*, const char*, int, const struct ns__scanningCell *, const char*);
SOAP_FMAC3 struct ns__scanningCell * SOAP_FMAC4 soap_in_ns__scanningCell(struct soap*, const char*, struct ns__scanningCell *, const char*);

#ifndef soap_write_ns__scanningCell
#define soap_write_ns__scanningCell(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__scanningCell(soap, data), 0) || soap_put_ns__scanningCell(soap, data, "ns:scanningCell", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__scanningCell(struct soap*, const struct ns__scanningCell *, const char*, const char*);

#ifndef soap_read_ns__scanningCell
#define soap_read_ns__scanningCell(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__scanningCell(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__scanningCell * SOAP_FMAC4 soap_get_ns__scanningCell(struct soap*, struct ns__scanningCell *, const char*, const char*);

#define soap_new_ns__scanningCell(soap, n) soap_instantiate_ns__scanningCell(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__scanningCell(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__scanningCell * SOAP_FMAC2 soap_instantiate_ns__scanningCell(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__scanningCell(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__scanningCellResponse
#define SOAP_TYPE_ns__scanningCellResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__scanningCellResponse(struct soap*, struct ns__scanningCellResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__scanningCellResponse(struct soap*, const struct ns__scanningCellResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__scanningCellResponse(struct soap*, const char*, int, const struct ns__scanningCellResponse *, const char*);
SOAP_FMAC3 struct ns__scanningCellResponse * SOAP_FMAC4 soap_in_ns__scanningCellResponse(struct soap*, const char*, struct ns__scanningCellResponse *, const char*);

#ifndef soap_write_ns__scanningCellResponse
#define soap_write_ns__scanningCellResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__scanningCellResponse(soap, data), 0) || soap_put_ns__scanningCellResponse(soap, data, "ns:scanningCellResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__scanningCellResponse(struct soap*, const struct ns__scanningCellResponse *, const char*, const char*);

#ifndef soap_read_ns__scanningCellResponse
#define soap_read_ns__scanningCellResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__scanningCellResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__scanningCellResponse * SOAP_FMAC4 soap_get_ns__scanningCellResponse(struct soap*, struct ns__scanningCellResponse *, const char*, const char*);

#define soap_new_ns__scanningCellResponse(soap, n) soap_instantiate_ns__scanningCellResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__scanningCellResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__scanningCellResponse * SOAP_FMAC2 soap_instantiate_ns__scanningCellResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__scanningCellResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__removeSmallCell
#define SOAP_TYPE_ns__removeSmallCell (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__removeSmallCell(struct soap*, struct ns__removeSmallCell *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__removeSmallCell(struct soap*, const struct ns__removeSmallCell *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__removeSmallCell(struct soap*, const char*, int, const struct ns__removeSmallCell *, const char*);
SOAP_FMAC3 struct ns__removeSmallCell * SOAP_FMAC4 soap_in_ns__removeSmallCell(struct soap*, const char*, struct ns__removeSmallCell *, const char*);

#ifndef soap_write_ns__removeSmallCell
#define soap_write_ns__removeSmallCell(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__removeSmallCell(soap, data), 0) || soap_put_ns__removeSmallCell(soap, data, "ns:removeSmallCell", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__removeSmallCell(struct soap*, const struct ns__removeSmallCell *, const char*, const char*);

#ifndef soap_read_ns__removeSmallCell
#define soap_read_ns__removeSmallCell(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__removeSmallCell(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__removeSmallCell * SOAP_FMAC4 soap_get_ns__removeSmallCell(struct soap*, struct ns__removeSmallCell *, const char*, const char*);

#define soap_new_ns__removeSmallCell(soap, n) soap_instantiate_ns__removeSmallCell(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__removeSmallCell(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__removeSmallCell * SOAP_FMAC2 soap_instantiate_ns__removeSmallCell(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__removeSmallCell(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Not
#define SOAP_TYPE_ns__Not (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Not(struct soap*, struct ns__Not *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Not(struct soap*, const struct ns__Not *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Not(struct soap*, const char*, int, const struct ns__Not *, const char*);
SOAP_FMAC3 struct ns__Not * SOAP_FMAC4 soap_in_ns__Not(struct soap*, const char*, struct ns__Not *, const char*);

#ifndef soap_write_ns__Not
#define soap_write_ns__Not(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Not(soap, data), 0) || soap_put_ns__Not(soap, data, "ns:Not", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Not(struct soap*, const struct ns__Not *, const char*, const char*);

#ifndef soap_read_ns__Not
#define soap_read_ns__Not(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Not(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Not * SOAP_FMAC4 soap_get_ns__Not(struct soap*, struct ns__Not *, const char*, const char*);

#define soap_new_ns__Not(soap, n) soap_instantiate_ns__Not(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Not(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Not * SOAP_FMAC2 soap_instantiate_ns__Not(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Not(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__NotResponse
#define SOAP_TYPE_ns__NotResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__NotResponse(struct soap*, struct ns__NotResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__NotResponse(struct soap*, const struct ns__NotResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__NotResponse(struct soap*, const char*, int, const struct ns__NotResponse *, const char*);
SOAP_FMAC3 struct ns__NotResponse * SOAP_FMAC4 soap_in_ns__NotResponse(struct soap*, const char*, struct ns__NotResponse *, const char*);

#ifndef soap_write_ns__NotResponse
#define soap_write_ns__NotResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__NotResponse(soap, data), 0) || soap_put_ns__NotResponse(soap, data, "ns:NotResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__NotResponse(struct soap*, const struct ns__NotResponse *, const char*, const char*);

#ifndef soap_read_ns__NotResponse
#define soap_read_ns__NotResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__NotResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__NotResponse * SOAP_FMAC4 soap_get_ns__NotResponse(struct soap*, struct ns__NotResponse *, const char*, const char*);

#define soap_new_ns__NotResponse(soap, n) soap_instantiate_ns__NotResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__NotResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__NotResponse * SOAP_FMAC2 soap_instantiate_ns__NotResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__NotResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__And
#define SOAP_TYPE_ns__And (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__And(struct soap*, struct ns__And *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__And(struct soap*, const struct ns__And *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__And(struct soap*, const char*, int, const struct ns__And *, const char*);
SOAP_FMAC3 struct ns__And * SOAP_FMAC4 soap_in_ns__And(struct soap*, const char*, struct ns__And *, const char*);

#ifndef soap_write_ns__And
#define soap_write_ns__And(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__And(soap, data), 0) || soap_put_ns__And(soap, data, "ns:And", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__And(struct soap*, const struct ns__And *, const char*, const char*);

#ifndef soap_read_ns__And
#define soap_read_ns__And(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__And(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__And * SOAP_FMAC4 soap_get_ns__And(struct soap*, struct ns__And *, const char*, const char*);

#define soap_new_ns__And(soap, n) soap_instantiate_ns__And(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__And(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__And * SOAP_FMAC2 soap_instantiate_ns__And(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__And(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AndResponse
#define SOAP_TYPE_ns__AndResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AndResponse(struct soap*, struct ns__AndResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AndResponse(struct soap*, const struct ns__AndResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AndResponse(struct soap*, const char*, int, const struct ns__AndResponse *, const char*);
SOAP_FMAC3 struct ns__AndResponse * SOAP_FMAC4 soap_in_ns__AndResponse(struct soap*, const char*, struct ns__AndResponse *, const char*);

#ifndef soap_write_ns__AndResponse
#define soap_write_ns__AndResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AndResponse(soap, data), 0) || soap_put_ns__AndResponse(soap, data, "ns:AndResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AndResponse(struct soap*, const struct ns__AndResponse *, const char*, const char*);

#ifndef soap_read_ns__AndResponse
#define soap_read_ns__AndResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AndResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AndResponse * SOAP_FMAC4 soap_get_ns__AndResponse(struct soap*, struct ns__AndResponse *, const char*, const char*);

#define soap_new_ns__AndResponse(soap, n) soap_instantiate_ns__AndResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AndResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AndResponse * SOAP_FMAC2 soap_instantiate_ns__AndResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AndResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Or
#define SOAP_TYPE_ns__Or (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Or(struct soap*, struct ns__Or *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Or(struct soap*, const struct ns__Or *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Or(struct soap*, const char*, int, const struct ns__Or *, const char*);
SOAP_FMAC3 struct ns__Or * SOAP_FMAC4 soap_in_ns__Or(struct soap*, const char*, struct ns__Or *, const char*);

#ifndef soap_write_ns__Or
#define soap_write_ns__Or(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Or(soap, data), 0) || soap_put_ns__Or(soap, data, "ns:Or", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Or(struct soap*, const struct ns__Or *, const char*, const char*);

#ifndef soap_read_ns__Or
#define soap_read_ns__Or(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Or(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Or * SOAP_FMAC4 soap_get_ns__Or(struct soap*, struct ns__Or *, const char*, const char*);

#define soap_new_ns__Or(soap, n) soap_instantiate_ns__Or(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Or(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Or * SOAP_FMAC2 soap_instantiate_ns__Or(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Or(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__OrResponse
#define SOAP_TYPE_ns__OrResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__OrResponse(struct soap*, struct ns__OrResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__OrResponse(struct soap*, const struct ns__OrResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__OrResponse(struct soap*, const char*, int, const struct ns__OrResponse *, const char*);
SOAP_FMAC3 struct ns__OrResponse * SOAP_FMAC4 soap_in_ns__OrResponse(struct soap*, const char*, struct ns__OrResponse *, const char*);

#ifndef soap_write_ns__OrResponse
#define soap_write_ns__OrResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__OrResponse(soap, data), 0) || soap_put_ns__OrResponse(soap, data, "ns:OrResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__OrResponse(struct soap*, const struct ns__OrResponse *, const char*, const char*);

#ifndef soap_read_ns__OrResponse
#define soap_read_ns__OrResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__OrResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__OrResponse * SOAP_FMAC4 soap_get_ns__OrResponse(struct soap*, struct ns__OrResponse *, const char*, const char*);

#define soap_new_ns__OrResponse(soap, n) soap_instantiate_ns__OrResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__OrResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__OrResponse * SOAP_FMAC2 soap_instantiate_ns__OrResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__OrResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__dilate
#define SOAP_TYPE_ns__dilate (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__dilate(struct soap*, struct ns__dilate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__dilate(struct soap*, const struct ns__dilate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__dilate(struct soap*, const char*, int, const struct ns__dilate *, const char*);
SOAP_FMAC3 struct ns__dilate * SOAP_FMAC4 soap_in_ns__dilate(struct soap*, const char*, struct ns__dilate *, const char*);

#ifndef soap_write_ns__dilate
#define soap_write_ns__dilate(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__dilate(soap, data), 0) || soap_put_ns__dilate(soap, data, "ns:dilate", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__dilate(struct soap*, const struct ns__dilate *, const char*, const char*);

#ifndef soap_read_ns__dilate
#define soap_read_ns__dilate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__dilate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__dilate * SOAP_FMAC4 soap_get_ns__dilate(struct soap*, struct ns__dilate *, const char*, const char*);

#define soap_new_ns__dilate(soap, n) soap_instantiate_ns__dilate(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__dilate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__dilate * SOAP_FMAC2 soap_instantiate_ns__dilate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__dilate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__dilateResponse
#define SOAP_TYPE_ns__dilateResponse (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__dilateResponse(struct soap*, struct ns__dilateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__dilateResponse(struct soap*, const struct ns__dilateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__dilateResponse(struct soap*, const char*, int, const struct ns__dilateResponse *, const char*);
SOAP_FMAC3 struct ns__dilateResponse * SOAP_FMAC4 soap_in_ns__dilateResponse(struct soap*, const char*, struct ns__dilateResponse *, const char*);

#ifndef soap_write_ns__dilateResponse
#define soap_write_ns__dilateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__dilateResponse(soap, data), 0) || soap_put_ns__dilateResponse(soap, data, "ns:dilateResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__dilateResponse(struct soap*, const struct ns__dilateResponse *, const char*, const char*);

#ifndef soap_read_ns__dilateResponse
#define soap_read_ns__dilateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__dilateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__dilateResponse * SOAP_FMAC4 soap_get_ns__dilateResponse(struct soap*, struct ns__dilateResponse *, const char*, const char*);

#define soap_new_ns__dilateResponse(soap, n) soap_instantiate_ns__dilateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__dilateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__dilateResponse * SOAP_FMAC2 soap_instantiate_ns__dilateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__dilateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erode
#define SOAP_TYPE_ns__erode (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erode(struct soap*, struct ns__erode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erode(struct soap*, const struct ns__erode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erode(struct soap*, const char*, int, const struct ns__erode *, const char*);
SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_in_ns__erode(struct soap*, const char*, struct ns__erode *, const char*);

#ifndef soap_write_ns__erode
#define soap_write_ns__erode(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erode(soap, data), 0) || soap_put_ns__erode(soap, data, "ns:erode", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erode(struct soap*, const struct ns__erode *, const char*, const char*);

#ifndef soap_read_ns__erode
#define soap_read_ns__erode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erode(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_get_ns__erode(struct soap*, struct ns__erode *, const char*, const char*);

#define soap_new_ns__erode(soap, n) soap_instantiate_ns__erode(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erode(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erode * SOAP_FMAC2 soap_instantiate_ns__erode(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erodeResponse
#define SOAP_TYPE_ns__erodeResponse (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erodeResponse(struct soap*, struct ns__erodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erodeResponse(struct soap*, const char*, int, const struct ns__erodeResponse *, const char*);
SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_in_ns__erodeResponse(struct soap*, const char*, struct ns__erodeResponse *, const char*);

#ifndef soap_write_ns__erodeResponse
#define soap_write_ns__erodeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erodeResponse(soap, data), 0) || soap_put_ns__erodeResponse(soap, data, "ns:erodeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *, const char*, const char*);

#ifndef soap_read_ns__erodeResponse
#define soap_read_ns__erodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_get_ns__erodeResponse(struct soap*, struct ns__erodeResponse *, const char*, const char*);

#define soap_new_ns__erodeResponse(soap, n) soap_instantiate_ns__erodeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erodeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erodeResponse * SOAP_FMAC2 soap_instantiate_ns__erodeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__findContoursAndFillpoly
#define SOAP_TYPE_ns__findContoursAndFillpoly (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__findContoursAndFillpoly(struct soap*, struct ns__findContoursAndFillpoly *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__findContoursAndFillpoly(struct soap*, const struct ns__findContoursAndFillpoly *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__findContoursAndFillpoly(struct soap*, const char*, int, const struct ns__findContoursAndFillpoly *, const char*);
SOAP_FMAC3 struct ns__findContoursAndFillpoly * SOAP_FMAC4 soap_in_ns__findContoursAndFillpoly(struct soap*, const char*, struct ns__findContoursAndFillpoly *, const char*);

#ifndef soap_write_ns__findContoursAndFillpoly
#define soap_write_ns__findContoursAndFillpoly(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__findContoursAndFillpoly(soap, data), 0) || soap_put_ns__findContoursAndFillpoly(soap, data, "ns:findContoursAndFillpoly", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__findContoursAndFillpoly(struct soap*, const struct ns__findContoursAndFillpoly *, const char*, const char*);

#ifndef soap_read_ns__findContoursAndFillpoly
#define soap_read_ns__findContoursAndFillpoly(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__findContoursAndFillpoly(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__findContoursAndFillpoly * SOAP_FMAC4 soap_get_ns__findContoursAndFillpoly(struct soap*, struct ns__findContoursAndFillpoly *, const char*, const char*);

#define soap_new_ns__findContoursAndFillpoly(soap, n) soap_instantiate_ns__findContoursAndFillpoly(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__findContoursAndFillpoly(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__findContoursAndFillpoly * SOAP_FMAC2 soap_instantiate_ns__findContoursAndFillpoly(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__findContoursAndFillpoly(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MatToJPG
#define SOAP_TYPE_ns__MatToJPG (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MatToJPG(struct soap*, struct ns__MatToJPG *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MatToJPG(struct soap*, const struct ns__MatToJPG *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MatToJPG(struct soap*, const char*, int, const struct ns__MatToJPG *, const char*);
SOAP_FMAC3 struct ns__MatToJPG * SOAP_FMAC4 soap_in_ns__MatToJPG(struct soap*, const char*, struct ns__MatToJPG *, const char*);

#ifndef soap_write_ns__MatToJPG
#define soap_write_ns__MatToJPG(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MatToJPG(soap, data), 0) || soap_put_ns__MatToJPG(soap, data, "ns:MatToJPG", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MatToJPG(struct soap*, const struct ns__MatToJPG *, const char*, const char*);

#ifndef soap_read_ns__MatToJPG
#define soap_read_ns__MatToJPG(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MatToJPG(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MatToJPG * SOAP_FMAC4 soap_get_ns__MatToJPG(struct soap*, struct ns__MatToJPG *, const char*, const char*);

#define soap_new_ns__MatToJPG(soap, n) soap_instantiate_ns__MatToJPG(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MatToJPG(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MatToJPG * SOAP_FMAC2 soap_instantiate_ns__MatToJPG(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MatToJPG(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MatToJPGResponse
#define SOAP_TYPE_ns__MatToJPGResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MatToJPGResponse(struct soap*, struct ns__MatToJPGResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MatToJPGResponse(struct soap*, const struct ns__MatToJPGResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MatToJPGResponse(struct soap*, const char*, int, const struct ns__MatToJPGResponse *, const char*);
SOAP_FMAC3 struct ns__MatToJPGResponse * SOAP_FMAC4 soap_in_ns__MatToJPGResponse(struct soap*, const char*, struct ns__MatToJPGResponse *, const char*);

#ifndef soap_write_ns__MatToJPGResponse
#define soap_write_ns__MatToJPGResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MatToJPGResponse(soap, data), 0) || soap_put_ns__MatToJPGResponse(soap, data, "ns:MatToJPGResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MatToJPGResponse(struct soap*, const struct ns__MatToJPGResponse *, const char*, const char*);

#ifndef soap_read_ns__MatToJPGResponse
#define soap_read_ns__MatToJPGResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MatToJPGResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MatToJPGResponse * SOAP_FMAC4 soap_get_ns__MatToJPGResponse(struct soap*, struct ns__MatToJPGResponse *, const char*, const char*);

#define soap_new_ns__MatToJPGResponse(soap, n) soap_instantiate_ns__MatToJPGResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MatToJPGResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MatToJPGResponse * SOAP_FMAC2 soap_instantiate_ns__MatToJPGResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MatToJPGResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__morphOpen
#define SOAP_TYPE_ns__morphOpen (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__morphOpen(struct soap*, struct ns__morphOpen *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__morphOpen(struct soap*, const struct ns__morphOpen *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__morphOpen(struct soap*, const char*, int, const struct ns__morphOpen *, const char*);
SOAP_FMAC3 struct ns__morphOpen * SOAP_FMAC4 soap_in_ns__morphOpen(struct soap*, const char*, struct ns__morphOpen *, const char*);

#ifndef soap_write_ns__morphOpen
#define soap_write_ns__morphOpen(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__morphOpen(soap, data), 0) || soap_put_ns__morphOpen(soap, data, "ns:morphOpen", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__morphOpen(struct soap*, const struct ns__morphOpen *, const char*, const char*);

#ifndef soap_read_ns__morphOpen
#define soap_read_ns__morphOpen(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__morphOpen(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__morphOpen * SOAP_FMAC4 soap_get_ns__morphOpen(struct soap*, struct ns__morphOpen *, const char*, const char*);

#define soap_new_ns__morphOpen(soap, n) soap_instantiate_ns__morphOpen(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__morphOpen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__morphOpen * SOAP_FMAC2 soap_instantiate_ns__morphOpen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__morphOpen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__morphOpenResponse
#define SOAP_TYPE_ns__morphOpenResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__morphOpenResponse(struct soap*, struct ns__morphOpenResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__morphOpenResponse(struct soap*, const struct ns__morphOpenResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__morphOpenResponse(struct soap*, const char*, int, const struct ns__morphOpenResponse *, const char*);
SOAP_FMAC3 struct ns__morphOpenResponse * SOAP_FMAC4 soap_in_ns__morphOpenResponse(struct soap*, const char*, struct ns__morphOpenResponse *, const char*);

#ifndef soap_write_ns__morphOpenResponse
#define soap_write_ns__morphOpenResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__morphOpenResponse(soap, data), 0) || soap_put_ns__morphOpenResponse(soap, data, "ns:morphOpenResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__morphOpenResponse(struct soap*, const struct ns__morphOpenResponse *, const char*, const char*);

#ifndef soap_read_ns__morphOpenResponse
#define soap_read_ns__morphOpenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__morphOpenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__morphOpenResponse * SOAP_FMAC4 soap_get_ns__morphOpenResponse(struct soap*, struct ns__morphOpenResponse *, const char*, const char*);

#define soap_new_ns__morphOpenResponse(soap, n) soap_instantiate_ns__morphOpenResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__morphOpenResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__morphOpenResponse * SOAP_FMAC2 soap_instantiate_ns__morphOpenResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__morphOpenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__binaryThreshold
#define SOAP_TYPE_ns__binaryThreshold (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__binaryThreshold(struct soap*, struct ns__binaryThreshold *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__binaryThreshold(struct soap*, const struct ns__binaryThreshold *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__binaryThreshold(struct soap*, const char*, int, const struct ns__binaryThreshold *, const char*);
SOAP_FMAC3 struct ns__binaryThreshold * SOAP_FMAC4 soap_in_ns__binaryThreshold(struct soap*, const char*, struct ns__binaryThreshold *, const char*);

#ifndef soap_write_ns__binaryThreshold
#define soap_write_ns__binaryThreshold(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__binaryThreshold(soap, data), 0) || soap_put_ns__binaryThreshold(soap, data, "ns:binaryThreshold", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__binaryThreshold(struct soap*, const struct ns__binaryThreshold *, const char*, const char*);

#ifndef soap_read_ns__binaryThreshold
#define soap_read_ns__binaryThreshold(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__binaryThreshold(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__binaryThreshold * SOAP_FMAC4 soap_get_ns__binaryThreshold(struct soap*, struct ns__binaryThreshold *, const char*, const char*);

#define soap_new_ns__binaryThreshold(soap, n) soap_instantiate_ns__binaryThreshold(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__binaryThreshold(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__binaryThreshold * SOAP_FMAC2 soap_instantiate_ns__binaryThreshold(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__binaryThreshold(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__binaryThresholdResponse
#define SOAP_TYPE_ns__binaryThresholdResponse (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__binaryThresholdResponse(struct soap*, struct ns__binaryThresholdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__binaryThresholdResponse(struct soap*, const struct ns__binaryThresholdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__binaryThresholdResponse(struct soap*, const char*, int, const struct ns__binaryThresholdResponse *, const char*);
SOAP_FMAC3 struct ns__binaryThresholdResponse * SOAP_FMAC4 soap_in_ns__binaryThresholdResponse(struct soap*, const char*, struct ns__binaryThresholdResponse *, const char*);

#ifndef soap_write_ns__binaryThresholdResponse
#define soap_write_ns__binaryThresholdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__binaryThresholdResponse(soap, data), 0) || soap_put_ns__binaryThresholdResponse(soap, data, "ns:binaryThresholdResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__binaryThresholdResponse(struct soap*, const struct ns__binaryThresholdResponse *, const char*, const char*);

#ifndef soap_read_ns__binaryThresholdResponse
#define soap_read_ns__binaryThresholdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__binaryThresholdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__binaryThresholdResponse * SOAP_FMAC4 soap_get_ns__binaryThresholdResponse(struct soap*, struct ns__binaryThresholdResponse *, const char*, const char*);

#define soap_new_ns__binaryThresholdResponse(soap, n) soap_instantiate_ns__binaryThresholdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__binaryThresholdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__binaryThresholdResponse * SOAP_FMAC2 soap_instantiate_ns__binaryThresholdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__binaryThresholdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__loadMat
#define SOAP_TYPE_ns__loadMat (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__loadMat(struct soap*, struct ns__loadMat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__loadMat(struct soap*, const struct ns__loadMat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__loadMat(struct soap*, const char*, int, const struct ns__loadMat *, const char*);
SOAP_FMAC3 struct ns__loadMat * SOAP_FMAC4 soap_in_ns__loadMat(struct soap*, const char*, struct ns__loadMat *, const char*);

#ifndef soap_write_ns__loadMat
#define soap_write_ns__loadMat(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__loadMat(soap, data), 0) || soap_put_ns__loadMat(soap, data, "ns:loadMat", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__loadMat(struct soap*, const struct ns__loadMat *, const char*, const char*);

#ifndef soap_read_ns__loadMat
#define soap_read_ns__loadMat(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__loadMat(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__loadMat * SOAP_FMAC4 soap_get_ns__loadMat(struct soap*, struct ns__loadMat *, const char*, const char*);

#define soap_new_ns__loadMat(soap, n) soap_instantiate_ns__loadMat(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__loadMat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__loadMat * SOAP_FMAC2 soap_instantiate_ns__loadMat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__loadMat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__loadMatResponse
#define SOAP_TYPE_ns__loadMatResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__loadMatResponse(struct soap*, struct ns__loadMatResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__loadMatResponse(struct soap*, const struct ns__loadMatResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__loadMatResponse(struct soap*, const char*, int, const struct ns__loadMatResponse *, const char*);
SOAP_FMAC3 struct ns__loadMatResponse * SOAP_FMAC4 soap_in_ns__loadMatResponse(struct soap*, const char*, struct ns__loadMatResponse *, const char*);

#ifndef soap_write_ns__loadMatResponse
#define soap_write_ns__loadMatResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__loadMatResponse(soap, data), 0) || soap_put_ns__loadMatResponse(soap, data, "ns:loadMatResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__loadMatResponse(struct soap*, const struct ns__loadMatResponse *, const char*, const char*);

#ifndef soap_read_ns__loadMatResponse
#define soap_read_ns__loadMatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__loadMatResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__loadMatResponse * SOAP_FMAC4 soap_get_ns__loadMatResponse(struct soap*, struct ns__loadMatResponse *, const char*, const char*);

#define soap_new_ns__loadMatResponse(soap, n) soap_instantiate_ns__loadMatResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__loadMatResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__loadMatResponse * SOAP_FMAC2 soap_instantiate_ns__loadMatResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__loadMatResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data), 0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
