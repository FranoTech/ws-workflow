/* soapH.h
   Generated by gSOAP 2.8.2 from imgProcess.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_ns__FindContours
#define SOAP_TYPE_ns__FindContours (7)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__FindContours(struct soap*, const char*, int, const ns__FindContours *, const char*);
SOAP_FMAC3 ns__FindContours * SOAP_FMAC4 soap_in_ns__FindContours(struct soap*, const char*, ns__FindContours *, const char*);

#ifndef soap_write_ns__FindContours
#define soap_write_ns__FindContours(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns:FindContours", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns__FindContours
#define soap_read_ns__FindContours(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__FindContours(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns__FindContours * SOAP_FMAC4 soap_get_ns__FindContours(struct soap*, ns__FindContours *, const char*, const char*);

#define soap_new_ns__FindContours(soap, n) soap_instantiate_ns__FindContours(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__FindContours(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns__FindContours * SOAP_FMAC2 soap_instantiate_ns__FindContours(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__FindContours(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__viewResult
#define SOAP_TYPE_ns__viewResult (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__viewResult(struct soap*, struct ns__viewResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__viewResult(struct soap*, const struct ns__viewResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__viewResult(struct soap*, const char*, int, const struct ns__viewResult *, const char*);
SOAP_FMAC3 struct ns__viewResult * SOAP_FMAC4 soap_in_ns__viewResult(struct soap*, const char*, struct ns__viewResult *, const char*);

#ifndef soap_write_ns__viewResult
#define soap_write_ns__viewResult(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__viewResult(soap, data), 0) || soap_put_ns__viewResult(soap, data, "ns:viewResult", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__viewResult(struct soap*, const struct ns__viewResult *, const char*, const char*);

#ifndef soap_read_ns__viewResult
#define soap_read_ns__viewResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__viewResult(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__viewResult * SOAP_FMAC4 soap_get_ns__viewResult(struct soap*, struct ns__viewResult *, const char*, const char*);

#define soap_new_ns__viewResult(soap, n) soap_instantiate_ns__viewResult(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__viewResult(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__viewResult * SOAP_FMAC2 soap_instantiate_ns__viewResult(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__viewResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__signalResponse
#define SOAP_TYPE_ns__signalResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__signalResponse(struct soap*, struct ns__signalResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__signalResponse(struct soap*, const struct ns__signalResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__signalResponse(struct soap*, const char*, int, const struct ns__signalResponse *, const char*);
SOAP_FMAC3 struct ns__signalResponse * SOAP_FMAC4 soap_in_ns__signalResponse(struct soap*, const char*, struct ns__signalResponse *, const char*);

#ifndef soap_write_ns__signalResponse
#define soap_write_ns__signalResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__signalResponse(soap, data), 0) || soap_put_ns__signalResponse(soap, data, "ns:signalResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__signalResponse(struct soap*, const struct ns__signalResponse *, const char*, const char*);

#ifndef soap_read_ns__signalResponse
#define soap_read_ns__signalResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__signalResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__signalResponse * SOAP_FMAC4 soap_get_ns__signalResponse(struct soap*, struct ns__signalResponse *, const char*, const char*);

#define soap_new_ns__signalResponse(soap, n) soap_instantiate_ns__signalResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__signalResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__signalResponse * SOAP_FMAC2 soap_instantiate_ns__signalResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__signalResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erode
#define SOAP_TYPE_ns__erode (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erode(struct soap*, struct ns__erode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erode(struct soap*, const struct ns__erode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erode(struct soap*, const char*, int, const struct ns__erode *, const char*);
SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_in_ns__erode(struct soap*, const char*, struct ns__erode *, const char*);

#ifndef soap_write_ns__erode
#define soap_write_ns__erode(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erode(soap, data), 0) || soap_put_ns__erode(soap, data, "ns:erode", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erode(struct soap*, const struct ns__erode *, const char*, const char*);

#ifndef soap_read_ns__erode
#define soap_read_ns__erode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erode(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_get_ns__erode(struct soap*, struct ns__erode *, const char*, const char*);

#define soap_new_ns__erode(soap, n) soap_instantiate_ns__erode(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erode(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erode * SOAP_FMAC2 soap_instantiate_ns__erode(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erodeResponse
#define SOAP_TYPE_ns__erodeResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erodeResponse(struct soap*, struct ns__erodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erodeResponse(struct soap*, const char*, int, const struct ns__erodeResponse *, const char*);
SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_in_ns__erodeResponse(struct soap*, const char*, struct ns__erodeResponse *, const char*);

#ifndef soap_write_ns__erodeResponse
#define soap_write_ns__erodeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erodeResponse(soap, data), 0) || soap_put_ns__erodeResponse(soap, data, "ns:erodeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *, const char*, const char*);

#ifndef soap_read_ns__erodeResponse
#define soap_read_ns__erodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_get_ns__erodeResponse(struct soap*, struct ns__erodeResponse *, const char*, const char*);

#define soap_new_ns__erodeResponse(soap, n) soap_instantiate_ns__erodeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erodeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erodeResponse * SOAP_FMAC2 soap_instantiate_ns__erodeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__findContoursAndFillpoly
#define SOAP_TYPE_ns__findContoursAndFillpoly (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__findContoursAndFillpoly(struct soap*, struct ns__findContoursAndFillpoly *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__findContoursAndFillpoly(struct soap*, const struct ns__findContoursAndFillpoly *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__findContoursAndFillpoly(struct soap*, const char*, int, const struct ns__findContoursAndFillpoly *, const char*);
SOAP_FMAC3 struct ns__findContoursAndFillpoly * SOAP_FMAC4 soap_in_ns__findContoursAndFillpoly(struct soap*, const char*, struct ns__findContoursAndFillpoly *, const char*);

#ifndef soap_write_ns__findContoursAndFillpoly
#define soap_write_ns__findContoursAndFillpoly(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__findContoursAndFillpoly(soap, data), 0) || soap_put_ns__findContoursAndFillpoly(soap, data, "ns:findContoursAndFillpoly", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__findContoursAndFillpoly(struct soap*, const struct ns__findContoursAndFillpoly *, const char*, const char*);

#ifndef soap_read_ns__findContoursAndFillpoly
#define soap_read_ns__findContoursAndFillpoly(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__findContoursAndFillpoly(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__findContoursAndFillpoly * SOAP_FMAC4 soap_get_ns__findContoursAndFillpoly(struct soap*, struct ns__findContoursAndFillpoly *, const char*, const char*);

#define soap_new_ns__findContoursAndFillpoly(soap, n) soap_instantiate_ns__findContoursAndFillpoly(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__findContoursAndFillpoly(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__findContoursAndFillpoly * SOAP_FMAC2 soap_instantiate_ns__findContoursAndFillpoly(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__findContoursAndFillpoly(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MatToJPG
#define SOAP_TYPE_ns__MatToJPG (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MatToJPG(struct soap*, struct ns__MatToJPG *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MatToJPG(struct soap*, const struct ns__MatToJPG *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MatToJPG(struct soap*, const char*, int, const struct ns__MatToJPG *, const char*);
SOAP_FMAC3 struct ns__MatToJPG * SOAP_FMAC4 soap_in_ns__MatToJPG(struct soap*, const char*, struct ns__MatToJPG *, const char*);

#ifndef soap_write_ns__MatToJPG
#define soap_write_ns__MatToJPG(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MatToJPG(soap, data), 0) || soap_put_ns__MatToJPG(soap, data, "ns:MatToJPG", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MatToJPG(struct soap*, const struct ns__MatToJPG *, const char*, const char*);

#ifndef soap_read_ns__MatToJPG
#define soap_read_ns__MatToJPG(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MatToJPG(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MatToJPG * SOAP_FMAC4 soap_get_ns__MatToJPG(struct soap*, struct ns__MatToJPG *, const char*, const char*);

#define soap_new_ns__MatToJPG(soap, n) soap_instantiate_ns__MatToJPG(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MatToJPG(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MatToJPG * SOAP_FMAC2 soap_instantiate_ns__MatToJPG(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MatToJPG(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MatToJPGResponse
#define SOAP_TYPE_ns__MatToJPGResponse (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MatToJPGResponse(struct soap*, struct ns__MatToJPGResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MatToJPGResponse(struct soap*, const struct ns__MatToJPGResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MatToJPGResponse(struct soap*, const char*, int, const struct ns__MatToJPGResponse *, const char*);
SOAP_FMAC3 struct ns__MatToJPGResponse * SOAP_FMAC4 soap_in_ns__MatToJPGResponse(struct soap*, const char*, struct ns__MatToJPGResponse *, const char*);

#ifndef soap_write_ns__MatToJPGResponse
#define soap_write_ns__MatToJPGResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MatToJPGResponse(soap, data), 0) || soap_put_ns__MatToJPGResponse(soap, data, "ns:MatToJPGResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MatToJPGResponse(struct soap*, const struct ns__MatToJPGResponse *, const char*, const char*);

#ifndef soap_read_ns__MatToJPGResponse
#define soap_read_ns__MatToJPGResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MatToJPGResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MatToJPGResponse * SOAP_FMAC4 soap_get_ns__MatToJPGResponse(struct soap*, struct ns__MatToJPGResponse *, const char*, const char*);

#define soap_new_ns__MatToJPGResponse(soap, n) soap_instantiate_ns__MatToJPGResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MatToJPGResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MatToJPGResponse * SOAP_FMAC2 soap_instantiate_ns__MatToJPGResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MatToJPGResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__morphOpen
#define SOAP_TYPE_ns__morphOpen (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__morphOpen(struct soap*, struct ns__morphOpen *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__morphOpen(struct soap*, const struct ns__morphOpen *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__morphOpen(struct soap*, const char*, int, const struct ns__morphOpen *, const char*);
SOAP_FMAC3 struct ns__morphOpen * SOAP_FMAC4 soap_in_ns__morphOpen(struct soap*, const char*, struct ns__morphOpen *, const char*);

#ifndef soap_write_ns__morphOpen
#define soap_write_ns__morphOpen(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__morphOpen(soap, data), 0) || soap_put_ns__morphOpen(soap, data, "ns:morphOpen", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__morphOpen(struct soap*, const struct ns__morphOpen *, const char*, const char*);

#ifndef soap_read_ns__morphOpen
#define soap_read_ns__morphOpen(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__morphOpen(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__morphOpen * SOAP_FMAC4 soap_get_ns__morphOpen(struct soap*, struct ns__morphOpen *, const char*, const char*);

#define soap_new_ns__morphOpen(soap, n) soap_instantiate_ns__morphOpen(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__morphOpen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__morphOpen * SOAP_FMAC2 soap_instantiate_ns__morphOpen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__morphOpen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__morphOpenResponse
#define SOAP_TYPE_ns__morphOpenResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__morphOpenResponse(struct soap*, struct ns__morphOpenResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__morphOpenResponse(struct soap*, const struct ns__morphOpenResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__morphOpenResponse(struct soap*, const char*, int, const struct ns__morphOpenResponse *, const char*);
SOAP_FMAC3 struct ns__morphOpenResponse * SOAP_FMAC4 soap_in_ns__morphOpenResponse(struct soap*, const char*, struct ns__morphOpenResponse *, const char*);

#ifndef soap_write_ns__morphOpenResponse
#define soap_write_ns__morphOpenResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__morphOpenResponse(soap, data), 0) || soap_put_ns__morphOpenResponse(soap, data, "ns:morphOpenResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__morphOpenResponse(struct soap*, const struct ns__morphOpenResponse *, const char*, const char*);

#ifndef soap_read_ns__morphOpenResponse
#define soap_read_ns__morphOpenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__morphOpenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__morphOpenResponse * SOAP_FMAC4 soap_get_ns__morphOpenResponse(struct soap*, struct ns__morphOpenResponse *, const char*, const char*);

#define soap_new_ns__morphOpenResponse(soap, n) soap_instantiate_ns__morphOpenResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__morphOpenResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__morphOpenResponse * SOAP_FMAC2 soap_instantiate_ns__morphOpenResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__morphOpenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__binaryThreshold
#define SOAP_TYPE_ns__binaryThreshold (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__binaryThreshold(struct soap*, struct ns__binaryThreshold *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__binaryThreshold(struct soap*, const struct ns__binaryThreshold *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__binaryThreshold(struct soap*, const char*, int, const struct ns__binaryThreshold *, const char*);
SOAP_FMAC3 struct ns__binaryThreshold * SOAP_FMAC4 soap_in_ns__binaryThreshold(struct soap*, const char*, struct ns__binaryThreshold *, const char*);

#ifndef soap_write_ns__binaryThreshold
#define soap_write_ns__binaryThreshold(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__binaryThreshold(soap, data), 0) || soap_put_ns__binaryThreshold(soap, data, "ns:binaryThreshold", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__binaryThreshold(struct soap*, const struct ns__binaryThreshold *, const char*, const char*);

#ifndef soap_read_ns__binaryThreshold
#define soap_read_ns__binaryThreshold(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__binaryThreshold(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__binaryThreshold * SOAP_FMAC4 soap_get_ns__binaryThreshold(struct soap*, struct ns__binaryThreshold *, const char*, const char*);

#define soap_new_ns__binaryThreshold(soap, n) soap_instantiate_ns__binaryThreshold(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__binaryThreshold(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__binaryThreshold * SOAP_FMAC2 soap_instantiate_ns__binaryThreshold(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__binaryThreshold(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__binaryThresholdResponse
#define SOAP_TYPE_ns__binaryThresholdResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__binaryThresholdResponse(struct soap*, struct ns__binaryThresholdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__binaryThresholdResponse(struct soap*, const struct ns__binaryThresholdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__binaryThresholdResponse(struct soap*, const char*, int, const struct ns__binaryThresholdResponse *, const char*);
SOAP_FMAC3 struct ns__binaryThresholdResponse * SOAP_FMAC4 soap_in_ns__binaryThresholdResponse(struct soap*, const char*, struct ns__binaryThresholdResponse *, const char*);

#ifndef soap_write_ns__binaryThresholdResponse
#define soap_write_ns__binaryThresholdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__binaryThresholdResponse(soap, data), 0) || soap_put_ns__binaryThresholdResponse(soap, data, "ns:binaryThresholdResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__binaryThresholdResponse(struct soap*, const struct ns__binaryThresholdResponse *, const char*, const char*);

#ifndef soap_read_ns__binaryThresholdResponse
#define soap_read_ns__binaryThresholdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__binaryThresholdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__binaryThresholdResponse * SOAP_FMAC4 soap_get_ns__binaryThresholdResponse(struct soap*, struct ns__binaryThresholdResponse *, const char*, const char*);

#define soap_new_ns__binaryThresholdResponse(soap, n) soap_instantiate_ns__binaryThresholdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__binaryThresholdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__binaryThresholdResponse * SOAP_FMAC2 soap_instantiate_ns__binaryThresholdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__binaryThresholdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__loadMat
#define SOAP_TYPE_ns__loadMat (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__loadMat(struct soap*, struct ns__loadMat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__loadMat(struct soap*, const struct ns__loadMat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__loadMat(struct soap*, const char*, int, const struct ns__loadMat *, const char*);
SOAP_FMAC3 struct ns__loadMat * SOAP_FMAC4 soap_in_ns__loadMat(struct soap*, const char*, struct ns__loadMat *, const char*);

#ifndef soap_write_ns__loadMat
#define soap_write_ns__loadMat(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__loadMat(soap, data), 0) || soap_put_ns__loadMat(soap, data, "ns:loadMat", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__loadMat(struct soap*, const struct ns__loadMat *, const char*, const char*);

#ifndef soap_read_ns__loadMat
#define soap_read_ns__loadMat(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__loadMat(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__loadMat * SOAP_FMAC4 soap_get_ns__loadMat(struct soap*, struct ns__loadMat *, const char*, const char*);

#define soap_new_ns__loadMat(soap, n) soap_instantiate_ns__loadMat(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__loadMat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__loadMat * SOAP_FMAC2 soap_instantiate_ns__loadMat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__loadMat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__loadMatResponse
#define SOAP_TYPE_ns__loadMatResponse (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__loadMatResponse(struct soap*, struct ns__loadMatResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__loadMatResponse(struct soap*, const struct ns__loadMatResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__loadMatResponse(struct soap*, const char*, int, const struct ns__loadMatResponse *, const char*);
SOAP_FMAC3 struct ns__loadMatResponse * SOAP_FMAC4 soap_in_ns__loadMatResponse(struct soap*, const char*, struct ns__loadMatResponse *, const char*);

#ifndef soap_write_ns__loadMatResponse
#define soap_write_ns__loadMatResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__loadMatResponse(soap, data), 0) || soap_put_ns__loadMatResponse(soap, data, "ns:loadMatResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__loadMatResponse(struct soap*, const struct ns__loadMatResponse *, const char*, const char*);

#ifndef soap_read_ns__loadMatResponse
#define soap_read_ns__loadMatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__loadMatResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__loadMatResponse * SOAP_FMAC4 soap_get_ns__loadMatResponse(struct soap*, struct ns__loadMatResponse *, const char*, const char*);

#define soap_new_ns__loadMatResponse(soap, n) soap_instantiate_ns__loadMatResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__loadMatResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__loadMatResponse * SOAP_FMAC2 soap_instantiate_ns__loadMatResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__loadMatResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTons__signalResponse
#define SOAP_TYPE_PointerTons__signalResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons__signalResponse(struct soap*, struct ns__signalResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons__signalResponse(struct soap*, const char *, int, struct ns__signalResponse *const*, const char *);
SOAP_FMAC3 struct ns__signalResponse ** SOAP_FMAC4 soap_in_PointerTons__signalResponse(struct soap*, const char*, struct ns__signalResponse **, const char*);

#ifndef soap_write_PointerTons__signalResponse
#define soap_write_PointerTons__signalResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons__signalResponse(soap, data), 0) || soap_put_PointerTons__signalResponse(soap, data, "ns:signalResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons__signalResponse(struct soap*, struct ns__signalResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTons__signalResponse
#define soap_read_PointerTons__signalResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons__signalResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__signalResponse ** SOAP_FMAC4 soap_get_PointerTons__signalResponse(struct soap*, struct ns__signalResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostring
#define SOAP_TYPE_PointerTostring (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);

#ifndef soap_write_PointerTostring
#define soap_write_PointerTostring(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostring(soap, data), 0) || soap_put_PointerTostring(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);

#ifndef soap_read_PointerTostring
#define soap_read_PointerTostring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
