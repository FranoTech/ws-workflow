/* soapClient.cpp
   Generated by gSOAP 2.8.2 from name.h
   Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.2 2011-09-19 17:47:00 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__genName(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *InputFilename, char *&OutputFilename)
{	struct ns__genName soap_tmp_ns__genName;
	struct ns__genNameResponse *soap_tmp_ns__genNameResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/cgi-bin/name";
	soap->encodingStyle = "";
	soap_tmp_ns__genName.InputFilename = InputFilename;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__genName(soap, &soap_tmp_ns__genName);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__genName(soap, &soap_tmp_ns__genName, "ns:genName", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__genName(soap, &soap_tmp_ns__genName, "ns:genName", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	OutputFilename = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__genNameResponse = soap_get_ns__genNameResponse(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	OutputFilename = soap_tmp_ns__genNameResponse->OutputFilename;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__genName2(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *InputFilename, char **OutputFilename)
{	struct ns__genName2 soap_tmp_ns__genName2;
	struct ns__genName2Response *soap_tmp_ns__genName2Response;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/cgi-bin/name";
	soap->encodingStyle = "";
	soap_tmp_ns__genName2.InputFilename = InputFilename;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__genName2(soap, &soap_tmp_ns__genName2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__genName2(soap, &soap_tmp_ns__genName2, "ns:genName2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__genName2(soap, &soap_tmp_ns__genName2, "ns:genName2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!OutputFilename)
		return soap_closesock(soap);
	*OutputFilename = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns__genName2Response = soap_get_ns__genName2Response(soap, NULL, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (OutputFilename && soap_tmp_ns__genName2Response->OutputFilename)
		*OutputFilename = *soap_tmp_ns__genName2Response->OutputFilename;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__genName3(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *InputFilename, ns__Output &out)
{	struct ns__genName3 soap_tmp_ns__genName3;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/cgi-bin/name";
	soap->encodingStyle = "";
	soap_tmp_ns__genName3.InputFilename = InputFilename;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__genName3(soap, &soap_tmp_ns__genName3);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__genName3(soap, &soap_tmp_ns__genName3, "ns:genName3", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__genName3(soap, &soap_tmp_ns__genName3, "ns:genName3", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&out)
		return soap_closesock(soap);
	out.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	out.soap_get(soap, "", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
