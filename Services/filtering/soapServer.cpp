/* soapServer.cpp
   Generated by gSOAP 2.8.14 from ImageFiltering.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.14 2013-03-16 17:39:20 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:blur"))
		return soap_serve_ns__blur(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GaussianBlur"))
		return soap_serve_ns__GaussianBlur(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:erode"))
		return soap_serve_ns__erode(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:dilate"))
		return soap_serve_ns__dilate(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:filter2D"))
		return soap_serve_ns__filter2D(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getStructuringElement"))
		return soap_serve_ns__getStructuringElement(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:medianBlur"))
		return soap_serve_ns__medianBlur(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:MorphologyEx"))
		return soap_serve_ns__MorphologyEx(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Laplacian"))
		return soap_serve_ns__Laplacian(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:pyrDown"))
		return soap_serve_ns__pyrDown(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:pyrUp"))
		return soap_serve_ns__pyrUp(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Sobel"))
		return soap_serve_ns__Sobel(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__blur(struct soap *soap)
{	struct ns__blur soap_tmp_ns__blur;
	struct ns__blurResponse soap_tmp_ns__blurResponse;
	soap_default_ns__blurResponse(soap, &soap_tmp_ns__blurResponse);
	soap_default_ns__blur(soap, &soap_tmp_ns__blur);
	soap->encodingStyle = "";
	if (!soap_get_ns__blur(soap, &soap_tmp_ns__blur, "ns:blur", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__blur(soap, soap_tmp_ns__blur.InputMatFilename, soap_tmp_ns__blur.kernelRows, soap_tmp_ns__blur.kernelCols, soap_tmp_ns__blur.anchorX_D, soap_tmp_ns__blur.anchorY_D, soap_tmp_ns__blur.borderType_D, soap_tmp_ns__blurResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__blurResponse(soap, &soap_tmp_ns__blurResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__blurResponse(soap, &soap_tmp_ns__blurResponse, "ns:blurResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__blurResponse(soap, &soap_tmp_ns__blurResponse, "ns:blurResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GaussianBlur(struct soap *soap)
{	struct ns__GaussianBlur soap_tmp_ns__GaussianBlur;
	struct ns__GaussianBlurResponse soap_tmp_ns__GaussianBlurResponse;
	soap_default_ns__GaussianBlurResponse(soap, &soap_tmp_ns__GaussianBlurResponse);
	soap_default_ns__GaussianBlur(soap, &soap_tmp_ns__GaussianBlur);
	soap->encodingStyle = "";
	if (!soap_get_ns__GaussianBlur(soap, &soap_tmp_ns__GaussianBlur, "ns:GaussianBlur", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GaussianBlur(soap, soap_tmp_ns__GaussianBlur.InputMatFilename, soap_tmp_ns__GaussianBlur.kernelRows, soap_tmp_ns__GaussianBlur.kernelCols, soap_tmp_ns__GaussianBlur.sigmaX, soap_tmp_ns__GaussianBlur.sigmaY_D, soap_tmp_ns__GaussianBlur.borderType_D, soap_tmp_ns__GaussianBlurResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GaussianBlurResponse(soap, &soap_tmp_ns__GaussianBlurResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GaussianBlurResponse(soap, &soap_tmp_ns__GaussianBlurResponse, "ns:GaussianBlurResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GaussianBlurResponse(soap, &soap_tmp_ns__GaussianBlurResponse, "ns:GaussianBlurResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__erode(struct soap *soap)
{	struct ns__erode soap_tmp_ns__erode;
	struct ns__erodeResponse soap_tmp_ns__erodeResponse;
	soap_default_ns__erodeResponse(soap, &soap_tmp_ns__erodeResponse);
	soap_default_ns__erode(soap, &soap_tmp_ns__erode);
	soap->encodingStyle = "";
	if (!soap_get_ns__erode(soap, &soap_tmp_ns__erode, "ns:erode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__erode(soap, soap_tmp_ns__erode.InputMatFilename, soap_tmp_ns__erode.StructuringElementFilename, soap_tmp_ns__erode.iteration_, soap_tmp_ns__erode.anchorX_D, soap_tmp_ns__erode.anchorY_D, soap_tmp_ns__erode.borderType_D, soap_tmp_ns__erodeResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__erodeResponse(soap, &soap_tmp_ns__erodeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__erodeResponse(soap, &soap_tmp_ns__erodeResponse, "ns:erodeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__erodeResponse(soap, &soap_tmp_ns__erodeResponse, "ns:erodeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__dilate(struct soap *soap)
{	struct ns__dilate soap_tmp_ns__dilate;
	struct ns__dilateResponse soap_tmp_ns__dilateResponse;
	soap_default_ns__dilateResponse(soap, &soap_tmp_ns__dilateResponse);
	soap_default_ns__dilate(soap, &soap_tmp_ns__dilate);
	soap->encodingStyle = "";
	if (!soap_get_ns__dilate(soap, &soap_tmp_ns__dilate, "ns:dilate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__dilate(soap, soap_tmp_ns__dilate.InputMatFilename, soap_tmp_ns__dilate.StructuringElementFilename, soap_tmp_ns__dilate.iteration_, soap_tmp_ns__dilate.anchorX_D, soap_tmp_ns__dilate.anchorY_D, soap_tmp_ns__dilate.borderType_D, soap_tmp_ns__dilateResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__dilateResponse(soap, &soap_tmp_ns__dilateResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__dilateResponse(soap, &soap_tmp_ns__dilateResponse, "ns:dilateResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__dilateResponse(soap, &soap_tmp_ns__dilateResponse, "ns:dilateResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__filter2D(struct soap *soap)
{	struct ns__filter2D soap_tmp_ns__filter2D;
	struct ns__filter2DResponse soap_tmp_ns__filter2DResponse;
	soap_default_ns__filter2DResponse(soap, &soap_tmp_ns__filter2DResponse);
	soap_default_ns__filter2D(soap, &soap_tmp_ns__filter2D);
	soap->encodingStyle = "";
	if (!soap_get_ns__filter2D(soap, &soap_tmp_ns__filter2D, "ns:filter2D", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__filter2D(soap, soap_tmp_ns__filter2D.InputMatFilename, soap_tmp_ns__filter2D.ddepth, soap_tmp_ns__filter2D.kernelFname, soap_tmp_ns__filter2D.anchorX_D, soap_tmp_ns__filter2D.anchorY_D, soap_tmp_ns__filter2D.delta_D, soap_tmp_ns__filter2D.borderType_D, soap_tmp_ns__filter2DResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__filter2DResponse(soap, &soap_tmp_ns__filter2DResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__filter2DResponse(soap, &soap_tmp_ns__filter2DResponse, "ns:filter2DResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__filter2DResponse(soap, &soap_tmp_ns__filter2DResponse, "ns:filter2DResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getStructuringElement(struct soap *soap)
{	struct ns__getStructuringElement soap_tmp_ns__getStructuringElement;
	struct ns__getStructuringElementResponse soap_tmp_ns__getStructuringElementResponse;
	soap_default_ns__getStructuringElementResponse(soap, &soap_tmp_ns__getStructuringElementResponse);
	soap_default_ns__getStructuringElement(soap, &soap_tmp_ns__getStructuringElement);
	soap->encodingStyle = "";
	if (!soap_get_ns__getStructuringElement(soap, &soap_tmp_ns__getStructuringElement, "ns:getStructuringElement", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getStructuringElement(soap, soap_tmp_ns__getStructuringElement.StructuringShape, soap_tmp_ns__getStructuringElement.seSizeW, soap_tmp_ns__getStructuringElement.seSizeH, soap_tmp_ns__getStructuringElement.anchorX_D, soap_tmp_ns__getStructuringElement.anchorY_D, soap_tmp_ns__getStructuringElementResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__getStructuringElementResponse(soap, &soap_tmp_ns__getStructuringElementResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__getStructuringElementResponse(soap, &soap_tmp_ns__getStructuringElementResponse, "ns:getStructuringElementResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__getStructuringElementResponse(soap, &soap_tmp_ns__getStructuringElementResponse, "ns:getStructuringElementResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__medianBlur(struct soap *soap)
{	struct ns__medianBlur soap_tmp_ns__medianBlur;
	struct ns__medianBlurResponse soap_tmp_ns__medianBlurResponse;
	soap_default_ns__medianBlurResponse(soap, &soap_tmp_ns__medianBlurResponse);
	soap_default_ns__medianBlur(soap, &soap_tmp_ns__medianBlur);
	soap->encodingStyle = "";
	if (!soap_get_ns__medianBlur(soap, &soap_tmp_ns__medianBlur, "ns:medianBlur", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__medianBlur(soap, soap_tmp_ns__medianBlur.InputMatFilename, soap_tmp_ns__medianBlur.kSize_D, soap_tmp_ns__medianBlurResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__medianBlurResponse(soap, &soap_tmp_ns__medianBlurResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__medianBlurResponse(soap, &soap_tmp_ns__medianBlurResponse, "ns:medianBlurResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__medianBlurResponse(soap, &soap_tmp_ns__medianBlurResponse, "ns:medianBlurResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__MorphologyEx(struct soap *soap)
{	struct ns__MorphologyEx soap_tmp_ns__MorphologyEx;
	struct ns__MorphologyExResponse soap_tmp_ns__MorphologyExResponse;
	soap_default_ns__MorphologyExResponse(soap, &soap_tmp_ns__MorphologyExResponse);
	soap_default_ns__MorphologyEx(soap, &soap_tmp_ns__MorphologyEx);
	soap->encodingStyle = "";
	if (!soap_get_ns__MorphologyEx(soap, &soap_tmp_ns__MorphologyEx, "ns:MorphologyEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__MorphologyEx(soap, soap_tmp_ns__MorphologyEx.InputMatFilename, soap_tmp_ns__MorphologyEx.morphOperation, soap_tmp_ns__MorphologyEx.StructuringElementFname, soap_tmp_ns__MorphologyEx.iteration_D, soap_tmp_ns__MorphologyEx.anchorX_D, soap_tmp_ns__MorphologyEx.anchorY_D, soap_tmp_ns__MorphologyExResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__MorphologyExResponse(soap, &soap_tmp_ns__MorphologyExResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__MorphologyExResponse(soap, &soap_tmp_ns__MorphologyExResponse, "ns:MorphologyExResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__MorphologyExResponse(soap, &soap_tmp_ns__MorphologyExResponse, "ns:MorphologyExResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Laplacian(struct soap *soap)
{	struct ns__Laplacian soap_tmp_ns__Laplacian;
	struct ns__LaplacianResponse soap_tmp_ns__LaplacianResponse;
	soap_default_ns__LaplacianResponse(soap, &soap_tmp_ns__LaplacianResponse);
	soap_default_ns__Laplacian(soap, &soap_tmp_ns__Laplacian);
	soap->encodingStyle = "";
	if (!soap_get_ns__Laplacian(soap, &soap_tmp_ns__Laplacian, "ns:Laplacian", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Laplacian(soap, soap_tmp_ns__Laplacian.InputMatFilename, soap_tmp_ns__Laplacian.ddepth, soap_tmp_ns__Laplacian.ksize_D, soap_tmp_ns__Laplacian.scale_D, soap_tmp_ns__Laplacian.delta_D, soap_tmp_ns__Laplacian.borderType_D, soap_tmp_ns__LaplacianResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__LaplacianResponse(soap, &soap_tmp_ns__LaplacianResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__LaplacianResponse(soap, &soap_tmp_ns__LaplacianResponse, "ns:LaplacianResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__LaplacianResponse(soap, &soap_tmp_ns__LaplacianResponse, "ns:LaplacianResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__pyrDown(struct soap *soap)
{	struct ns__pyrDown soap_tmp_ns__pyrDown;
	struct ns__pyrDownResponse soap_tmp_ns__pyrDownResponse;
	soap_default_ns__pyrDownResponse(soap, &soap_tmp_ns__pyrDownResponse);
	soap_default_ns__pyrDown(soap, &soap_tmp_ns__pyrDown);
	soap->encodingStyle = "";
	if (!soap_get_ns__pyrDown(soap, &soap_tmp_ns__pyrDown, "ns:pyrDown", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__pyrDown(soap, soap_tmp_ns__pyrDown.InputMatFilename, soap_tmp_ns__pyrDown.rows, soap_tmp_ns__pyrDown.cols, soap_tmp_ns__pyrDown.borderType_D, soap_tmp_ns__pyrDownResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__pyrDownResponse(soap, &soap_tmp_ns__pyrDownResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__pyrDownResponse(soap, &soap_tmp_ns__pyrDownResponse, "ns:pyrDownResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__pyrDownResponse(soap, &soap_tmp_ns__pyrDownResponse, "ns:pyrDownResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__pyrUp(struct soap *soap)
{	struct ns__pyrUp soap_tmp_ns__pyrUp;
	struct ns__pyrUpResponse soap_tmp_ns__pyrUpResponse;
	soap_default_ns__pyrUpResponse(soap, &soap_tmp_ns__pyrUpResponse);
	soap_default_ns__pyrUp(soap, &soap_tmp_ns__pyrUp);
	soap->encodingStyle = "";
	if (!soap_get_ns__pyrUp(soap, &soap_tmp_ns__pyrUp, "ns:pyrUp", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__pyrUp(soap, soap_tmp_ns__pyrUp.InputMatFilename, soap_tmp_ns__pyrUp.rows, soap_tmp_ns__pyrUp.cols, soap_tmp_ns__pyrUp.borderType_D, soap_tmp_ns__pyrUpResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__pyrUpResponse(soap, &soap_tmp_ns__pyrUpResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__pyrUpResponse(soap, &soap_tmp_ns__pyrUpResponse, "ns:pyrUpResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__pyrUpResponse(soap, &soap_tmp_ns__pyrUpResponse, "ns:pyrUpResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Sobel(struct soap *soap)
{	struct ns__Sobel soap_tmp_ns__Sobel;
	struct ns__SobelResponse soap_tmp_ns__SobelResponse;
	soap_default_ns__SobelResponse(soap, &soap_tmp_ns__SobelResponse);
	soap_default_ns__Sobel(soap, &soap_tmp_ns__Sobel);
	soap->encodingStyle = "";
	if (!soap_get_ns__Sobel(soap, &soap_tmp_ns__Sobel, "ns:Sobel", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Sobel(soap, soap_tmp_ns__Sobel.InputMatFilename, soap_tmp_ns__Sobel.ddepth, soap_tmp_ns__Sobel.kSize_D, soap_tmp_ns__Sobel.scale_D, soap_tmp_ns__Sobel.delta_D, soap_tmp_ns__Sobel.dx, soap_tmp_ns__Sobel.dy, soap_tmp_ns__Sobel.borderType_D, soap_tmp_ns__SobelResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__SobelResponse(soap, &soap_tmp_ns__SobelResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__SobelResponse(soap, &soap_tmp_ns__SobelResponse, "ns:SobelResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__SobelResponse(soap, &soap_tmp_ns__SobelResponse, "ns:SobelResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
