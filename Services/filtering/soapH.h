/* soapH.h
   Generated by gSOAP 2.8.8 from ImageFiltering.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__Sobel
#define SOAP_TYPE_ns__Sobel (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Sobel(struct soap*, struct ns__Sobel *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Sobel(struct soap*, const struct ns__Sobel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Sobel(struct soap*, const char*, int, const struct ns__Sobel *, const char*);
SOAP_FMAC3 struct ns__Sobel * SOAP_FMAC4 soap_in_ns__Sobel(struct soap*, const char*, struct ns__Sobel *, const char*);

#ifndef soap_write_ns__Sobel
#define soap_write_ns__Sobel(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Sobel(soap, data), 0) || soap_put_ns__Sobel(soap, data, "ns:Sobel", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Sobel(struct soap*, const struct ns__Sobel *, const char*, const char*);

#ifndef soap_read_ns__Sobel
#define soap_read_ns__Sobel(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Sobel(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Sobel * SOAP_FMAC4 soap_get_ns__Sobel(struct soap*, struct ns__Sobel *, const char*, const char*);

#define soap_new_ns__Sobel(soap, n) soap_instantiate_ns__Sobel(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Sobel(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Sobel * SOAP_FMAC2 soap_instantiate_ns__Sobel(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Sobel(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__SobelResponse
#define SOAP_TYPE_ns__SobelResponse (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__SobelResponse(struct soap*, struct ns__SobelResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__SobelResponse(struct soap*, const struct ns__SobelResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__SobelResponse(struct soap*, const char*, int, const struct ns__SobelResponse *, const char*);
SOAP_FMAC3 struct ns__SobelResponse * SOAP_FMAC4 soap_in_ns__SobelResponse(struct soap*, const char*, struct ns__SobelResponse *, const char*);

#ifndef soap_write_ns__SobelResponse
#define soap_write_ns__SobelResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__SobelResponse(soap, data), 0) || soap_put_ns__SobelResponse(soap, data, "ns:SobelResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__SobelResponse(struct soap*, const struct ns__SobelResponse *, const char*, const char*);

#ifndef soap_read_ns__SobelResponse
#define soap_read_ns__SobelResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__SobelResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__SobelResponse * SOAP_FMAC4 soap_get_ns__SobelResponse(struct soap*, struct ns__SobelResponse *, const char*, const char*);

#define soap_new_ns__SobelResponse(soap, n) soap_instantiate_ns__SobelResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__SobelResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__SobelResponse * SOAP_FMAC2 soap_instantiate_ns__SobelResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__SobelResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__pyrUp
#define SOAP_TYPE_ns__pyrUp (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__pyrUp(struct soap*, struct ns__pyrUp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__pyrUp(struct soap*, const struct ns__pyrUp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__pyrUp(struct soap*, const char*, int, const struct ns__pyrUp *, const char*);
SOAP_FMAC3 struct ns__pyrUp * SOAP_FMAC4 soap_in_ns__pyrUp(struct soap*, const char*, struct ns__pyrUp *, const char*);

#ifndef soap_write_ns__pyrUp
#define soap_write_ns__pyrUp(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__pyrUp(soap, data), 0) || soap_put_ns__pyrUp(soap, data, "ns:pyrUp", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__pyrUp(struct soap*, const struct ns__pyrUp *, const char*, const char*);

#ifndef soap_read_ns__pyrUp
#define soap_read_ns__pyrUp(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__pyrUp(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__pyrUp * SOAP_FMAC4 soap_get_ns__pyrUp(struct soap*, struct ns__pyrUp *, const char*, const char*);

#define soap_new_ns__pyrUp(soap, n) soap_instantiate_ns__pyrUp(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__pyrUp(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__pyrUp * SOAP_FMAC2 soap_instantiate_ns__pyrUp(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__pyrUp(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__pyrUpResponse
#define SOAP_TYPE_ns__pyrUpResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__pyrUpResponse(struct soap*, struct ns__pyrUpResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__pyrUpResponse(struct soap*, const struct ns__pyrUpResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__pyrUpResponse(struct soap*, const char*, int, const struct ns__pyrUpResponse *, const char*);
SOAP_FMAC3 struct ns__pyrUpResponse * SOAP_FMAC4 soap_in_ns__pyrUpResponse(struct soap*, const char*, struct ns__pyrUpResponse *, const char*);

#ifndef soap_write_ns__pyrUpResponse
#define soap_write_ns__pyrUpResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__pyrUpResponse(soap, data), 0) || soap_put_ns__pyrUpResponse(soap, data, "ns:pyrUpResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__pyrUpResponse(struct soap*, const struct ns__pyrUpResponse *, const char*, const char*);

#ifndef soap_read_ns__pyrUpResponse
#define soap_read_ns__pyrUpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__pyrUpResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__pyrUpResponse * SOAP_FMAC4 soap_get_ns__pyrUpResponse(struct soap*, struct ns__pyrUpResponse *, const char*, const char*);

#define soap_new_ns__pyrUpResponse(soap, n) soap_instantiate_ns__pyrUpResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__pyrUpResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__pyrUpResponse * SOAP_FMAC2 soap_instantiate_ns__pyrUpResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__pyrUpResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__pyrDown
#define SOAP_TYPE_ns__pyrDown (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__pyrDown(struct soap*, struct ns__pyrDown *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__pyrDown(struct soap*, const struct ns__pyrDown *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__pyrDown(struct soap*, const char*, int, const struct ns__pyrDown *, const char*);
SOAP_FMAC3 struct ns__pyrDown * SOAP_FMAC4 soap_in_ns__pyrDown(struct soap*, const char*, struct ns__pyrDown *, const char*);

#ifndef soap_write_ns__pyrDown
#define soap_write_ns__pyrDown(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__pyrDown(soap, data), 0) || soap_put_ns__pyrDown(soap, data, "ns:pyrDown", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__pyrDown(struct soap*, const struct ns__pyrDown *, const char*, const char*);

#ifndef soap_read_ns__pyrDown
#define soap_read_ns__pyrDown(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__pyrDown(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__pyrDown * SOAP_FMAC4 soap_get_ns__pyrDown(struct soap*, struct ns__pyrDown *, const char*, const char*);

#define soap_new_ns__pyrDown(soap, n) soap_instantiate_ns__pyrDown(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__pyrDown(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__pyrDown * SOAP_FMAC2 soap_instantiate_ns__pyrDown(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__pyrDown(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__pyrDownResponse
#define SOAP_TYPE_ns__pyrDownResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__pyrDownResponse(struct soap*, struct ns__pyrDownResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__pyrDownResponse(struct soap*, const struct ns__pyrDownResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__pyrDownResponse(struct soap*, const char*, int, const struct ns__pyrDownResponse *, const char*);
SOAP_FMAC3 struct ns__pyrDownResponse * SOAP_FMAC4 soap_in_ns__pyrDownResponse(struct soap*, const char*, struct ns__pyrDownResponse *, const char*);

#ifndef soap_write_ns__pyrDownResponse
#define soap_write_ns__pyrDownResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__pyrDownResponse(soap, data), 0) || soap_put_ns__pyrDownResponse(soap, data, "ns:pyrDownResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__pyrDownResponse(struct soap*, const struct ns__pyrDownResponse *, const char*, const char*);

#ifndef soap_read_ns__pyrDownResponse
#define soap_read_ns__pyrDownResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__pyrDownResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__pyrDownResponse * SOAP_FMAC4 soap_get_ns__pyrDownResponse(struct soap*, struct ns__pyrDownResponse *, const char*, const char*);

#define soap_new_ns__pyrDownResponse(soap, n) soap_instantiate_ns__pyrDownResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__pyrDownResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__pyrDownResponse * SOAP_FMAC2 soap_instantiate_ns__pyrDownResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__pyrDownResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Laplacian
#define SOAP_TYPE_ns__Laplacian (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Laplacian(struct soap*, struct ns__Laplacian *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Laplacian(struct soap*, const struct ns__Laplacian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Laplacian(struct soap*, const char*, int, const struct ns__Laplacian *, const char*);
SOAP_FMAC3 struct ns__Laplacian * SOAP_FMAC4 soap_in_ns__Laplacian(struct soap*, const char*, struct ns__Laplacian *, const char*);

#ifndef soap_write_ns__Laplacian
#define soap_write_ns__Laplacian(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Laplacian(soap, data), 0) || soap_put_ns__Laplacian(soap, data, "ns:Laplacian", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Laplacian(struct soap*, const struct ns__Laplacian *, const char*, const char*);

#ifndef soap_read_ns__Laplacian
#define soap_read_ns__Laplacian(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Laplacian(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Laplacian * SOAP_FMAC4 soap_get_ns__Laplacian(struct soap*, struct ns__Laplacian *, const char*, const char*);

#define soap_new_ns__Laplacian(soap, n) soap_instantiate_ns__Laplacian(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Laplacian(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Laplacian * SOAP_FMAC2 soap_instantiate_ns__Laplacian(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Laplacian(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__LaplacianResponse
#define SOAP_TYPE_ns__LaplacianResponse (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__LaplacianResponse(struct soap*, struct ns__LaplacianResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__LaplacianResponse(struct soap*, const struct ns__LaplacianResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__LaplacianResponse(struct soap*, const char*, int, const struct ns__LaplacianResponse *, const char*);
SOAP_FMAC3 struct ns__LaplacianResponse * SOAP_FMAC4 soap_in_ns__LaplacianResponse(struct soap*, const char*, struct ns__LaplacianResponse *, const char*);

#ifndef soap_write_ns__LaplacianResponse
#define soap_write_ns__LaplacianResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__LaplacianResponse(soap, data), 0) || soap_put_ns__LaplacianResponse(soap, data, "ns:LaplacianResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__LaplacianResponse(struct soap*, const struct ns__LaplacianResponse *, const char*, const char*);

#ifndef soap_read_ns__LaplacianResponse
#define soap_read_ns__LaplacianResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__LaplacianResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__LaplacianResponse * SOAP_FMAC4 soap_get_ns__LaplacianResponse(struct soap*, struct ns__LaplacianResponse *, const char*, const char*);

#define soap_new_ns__LaplacianResponse(soap, n) soap_instantiate_ns__LaplacianResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__LaplacianResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__LaplacianResponse * SOAP_FMAC2 soap_instantiate_ns__LaplacianResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__LaplacianResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MorphologyEx
#define SOAP_TYPE_ns__MorphologyEx (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MorphologyEx(struct soap*, struct ns__MorphologyEx *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MorphologyEx(struct soap*, const struct ns__MorphologyEx *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MorphologyEx(struct soap*, const char*, int, const struct ns__MorphologyEx *, const char*);
SOAP_FMAC3 struct ns__MorphologyEx * SOAP_FMAC4 soap_in_ns__MorphologyEx(struct soap*, const char*, struct ns__MorphologyEx *, const char*);

#ifndef soap_write_ns__MorphologyEx
#define soap_write_ns__MorphologyEx(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MorphologyEx(soap, data), 0) || soap_put_ns__MorphologyEx(soap, data, "ns:MorphologyEx", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MorphologyEx(struct soap*, const struct ns__MorphologyEx *, const char*, const char*);

#ifndef soap_read_ns__MorphologyEx
#define soap_read_ns__MorphologyEx(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MorphologyEx(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MorphologyEx * SOAP_FMAC4 soap_get_ns__MorphologyEx(struct soap*, struct ns__MorphologyEx *, const char*, const char*);

#define soap_new_ns__MorphologyEx(soap, n) soap_instantiate_ns__MorphologyEx(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MorphologyEx(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MorphologyEx * SOAP_FMAC2 soap_instantiate_ns__MorphologyEx(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MorphologyEx(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__MorphologyExResponse
#define SOAP_TYPE_ns__MorphologyExResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__MorphologyExResponse(struct soap*, struct ns__MorphologyExResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__MorphologyExResponse(struct soap*, const struct ns__MorphologyExResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__MorphologyExResponse(struct soap*, const char*, int, const struct ns__MorphologyExResponse *, const char*);
SOAP_FMAC3 struct ns__MorphologyExResponse * SOAP_FMAC4 soap_in_ns__MorphologyExResponse(struct soap*, const char*, struct ns__MorphologyExResponse *, const char*);

#ifndef soap_write_ns__MorphologyExResponse
#define soap_write_ns__MorphologyExResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__MorphologyExResponse(soap, data), 0) || soap_put_ns__MorphologyExResponse(soap, data, "ns:MorphologyExResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__MorphologyExResponse(struct soap*, const struct ns__MorphologyExResponse *, const char*, const char*);

#ifndef soap_read_ns__MorphologyExResponse
#define soap_read_ns__MorphologyExResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__MorphologyExResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__MorphologyExResponse * SOAP_FMAC4 soap_get_ns__MorphologyExResponse(struct soap*, struct ns__MorphologyExResponse *, const char*, const char*);

#define soap_new_ns__MorphologyExResponse(soap, n) soap_instantiate_ns__MorphologyExResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__MorphologyExResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__MorphologyExResponse * SOAP_FMAC2 soap_instantiate_ns__MorphologyExResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__MorphologyExResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__medianBlur
#define SOAP_TYPE_ns__medianBlur (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__medianBlur(struct soap*, struct ns__medianBlur *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__medianBlur(struct soap*, const struct ns__medianBlur *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__medianBlur(struct soap*, const char*, int, const struct ns__medianBlur *, const char*);
SOAP_FMAC3 struct ns__medianBlur * SOAP_FMAC4 soap_in_ns__medianBlur(struct soap*, const char*, struct ns__medianBlur *, const char*);

#ifndef soap_write_ns__medianBlur
#define soap_write_ns__medianBlur(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__medianBlur(soap, data), 0) || soap_put_ns__medianBlur(soap, data, "ns:medianBlur", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__medianBlur(struct soap*, const struct ns__medianBlur *, const char*, const char*);

#ifndef soap_read_ns__medianBlur
#define soap_read_ns__medianBlur(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__medianBlur(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__medianBlur * SOAP_FMAC4 soap_get_ns__medianBlur(struct soap*, struct ns__medianBlur *, const char*, const char*);

#define soap_new_ns__medianBlur(soap, n) soap_instantiate_ns__medianBlur(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__medianBlur(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__medianBlur * SOAP_FMAC2 soap_instantiate_ns__medianBlur(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__medianBlur(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__medianBlurResponse
#define SOAP_TYPE_ns__medianBlurResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__medianBlurResponse(struct soap*, struct ns__medianBlurResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__medianBlurResponse(struct soap*, const struct ns__medianBlurResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__medianBlurResponse(struct soap*, const char*, int, const struct ns__medianBlurResponse *, const char*);
SOAP_FMAC3 struct ns__medianBlurResponse * SOAP_FMAC4 soap_in_ns__medianBlurResponse(struct soap*, const char*, struct ns__medianBlurResponse *, const char*);

#ifndef soap_write_ns__medianBlurResponse
#define soap_write_ns__medianBlurResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__medianBlurResponse(soap, data), 0) || soap_put_ns__medianBlurResponse(soap, data, "ns:medianBlurResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__medianBlurResponse(struct soap*, const struct ns__medianBlurResponse *, const char*, const char*);

#ifndef soap_read_ns__medianBlurResponse
#define soap_read_ns__medianBlurResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__medianBlurResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__medianBlurResponse * SOAP_FMAC4 soap_get_ns__medianBlurResponse(struct soap*, struct ns__medianBlurResponse *, const char*, const char*);

#define soap_new_ns__medianBlurResponse(soap, n) soap_instantiate_ns__medianBlurResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__medianBlurResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__medianBlurResponse * SOAP_FMAC2 soap_instantiate_ns__medianBlurResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__medianBlurResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getStructuringElement
#define SOAP_TYPE_ns__getStructuringElement (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getStructuringElement(struct soap*, struct ns__getStructuringElement *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getStructuringElement(struct soap*, const struct ns__getStructuringElement *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getStructuringElement(struct soap*, const char*, int, const struct ns__getStructuringElement *, const char*);
SOAP_FMAC3 struct ns__getStructuringElement * SOAP_FMAC4 soap_in_ns__getStructuringElement(struct soap*, const char*, struct ns__getStructuringElement *, const char*);

#ifndef soap_write_ns__getStructuringElement
#define soap_write_ns__getStructuringElement(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getStructuringElement(soap, data), 0) || soap_put_ns__getStructuringElement(soap, data, "ns:getStructuringElement", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getStructuringElement(struct soap*, const struct ns__getStructuringElement *, const char*, const char*);

#ifndef soap_read_ns__getStructuringElement
#define soap_read_ns__getStructuringElement(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getStructuringElement(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getStructuringElement * SOAP_FMAC4 soap_get_ns__getStructuringElement(struct soap*, struct ns__getStructuringElement *, const char*, const char*);

#define soap_new_ns__getStructuringElement(soap, n) soap_instantiate_ns__getStructuringElement(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getStructuringElement(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getStructuringElement * SOAP_FMAC2 soap_instantiate_ns__getStructuringElement(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getStructuringElement(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__getStructuringElementResponse
#define SOAP_TYPE_ns__getStructuringElementResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__getStructuringElementResponse(struct soap*, struct ns__getStructuringElementResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__getStructuringElementResponse(struct soap*, const struct ns__getStructuringElementResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__getStructuringElementResponse(struct soap*, const char*, int, const struct ns__getStructuringElementResponse *, const char*);
SOAP_FMAC3 struct ns__getStructuringElementResponse * SOAP_FMAC4 soap_in_ns__getStructuringElementResponse(struct soap*, const char*, struct ns__getStructuringElementResponse *, const char*);

#ifndef soap_write_ns__getStructuringElementResponse
#define soap_write_ns__getStructuringElementResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__getStructuringElementResponse(soap, data), 0) || soap_put_ns__getStructuringElementResponse(soap, data, "ns:getStructuringElementResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__getStructuringElementResponse(struct soap*, const struct ns__getStructuringElementResponse *, const char*, const char*);

#ifndef soap_read_ns__getStructuringElementResponse
#define soap_read_ns__getStructuringElementResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__getStructuringElementResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__getStructuringElementResponse * SOAP_FMAC4 soap_get_ns__getStructuringElementResponse(struct soap*, struct ns__getStructuringElementResponse *, const char*, const char*);

#define soap_new_ns__getStructuringElementResponse(soap, n) soap_instantiate_ns__getStructuringElementResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__getStructuringElementResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__getStructuringElementResponse * SOAP_FMAC2 soap_instantiate_ns__getStructuringElementResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__getStructuringElementResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__filter2D
#define SOAP_TYPE_ns__filter2D (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__filter2D(struct soap*, struct ns__filter2D *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__filter2D(struct soap*, const struct ns__filter2D *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__filter2D(struct soap*, const char*, int, const struct ns__filter2D *, const char*);
SOAP_FMAC3 struct ns__filter2D * SOAP_FMAC4 soap_in_ns__filter2D(struct soap*, const char*, struct ns__filter2D *, const char*);

#ifndef soap_write_ns__filter2D
#define soap_write_ns__filter2D(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__filter2D(soap, data), 0) || soap_put_ns__filter2D(soap, data, "ns:filter2D", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__filter2D(struct soap*, const struct ns__filter2D *, const char*, const char*);

#ifndef soap_read_ns__filter2D
#define soap_read_ns__filter2D(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__filter2D(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__filter2D * SOAP_FMAC4 soap_get_ns__filter2D(struct soap*, struct ns__filter2D *, const char*, const char*);

#define soap_new_ns__filter2D(soap, n) soap_instantiate_ns__filter2D(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__filter2D(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__filter2D * SOAP_FMAC2 soap_instantiate_ns__filter2D(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__filter2D(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__filter2DResponse
#define SOAP_TYPE_ns__filter2DResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__filter2DResponse(struct soap*, struct ns__filter2DResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__filter2DResponse(struct soap*, const struct ns__filter2DResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__filter2DResponse(struct soap*, const char*, int, const struct ns__filter2DResponse *, const char*);
SOAP_FMAC3 struct ns__filter2DResponse * SOAP_FMAC4 soap_in_ns__filter2DResponse(struct soap*, const char*, struct ns__filter2DResponse *, const char*);

#ifndef soap_write_ns__filter2DResponse
#define soap_write_ns__filter2DResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__filter2DResponse(soap, data), 0) || soap_put_ns__filter2DResponse(soap, data, "ns:filter2DResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__filter2DResponse(struct soap*, const struct ns__filter2DResponse *, const char*, const char*);

#ifndef soap_read_ns__filter2DResponse
#define soap_read_ns__filter2DResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__filter2DResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__filter2DResponse * SOAP_FMAC4 soap_get_ns__filter2DResponse(struct soap*, struct ns__filter2DResponse *, const char*, const char*);

#define soap_new_ns__filter2DResponse(soap, n) soap_instantiate_ns__filter2DResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__filter2DResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__filter2DResponse * SOAP_FMAC2 soap_instantiate_ns__filter2DResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__filter2DResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__dilate
#define SOAP_TYPE_ns__dilate (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__dilate(struct soap*, struct ns__dilate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__dilate(struct soap*, const struct ns__dilate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__dilate(struct soap*, const char*, int, const struct ns__dilate *, const char*);
SOAP_FMAC3 struct ns__dilate * SOAP_FMAC4 soap_in_ns__dilate(struct soap*, const char*, struct ns__dilate *, const char*);

#ifndef soap_write_ns__dilate
#define soap_write_ns__dilate(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__dilate(soap, data), 0) || soap_put_ns__dilate(soap, data, "ns:dilate", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__dilate(struct soap*, const struct ns__dilate *, const char*, const char*);

#ifndef soap_read_ns__dilate
#define soap_read_ns__dilate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__dilate(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__dilate * SOAP_FMAC4 soap_get_ns__dilate(struct soap*, struct ns__dilate *, const char*, const char*);

#define soap_new_ns__dilate(soap, n) soap_instantiate_ns__dilate(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__dilate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__dilate * SOAP_FMAC2 soap_instantiate_ns__dilate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__dilate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__dilateResponse
#define SOAP_TYPE_ns__dilateResponse (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__dilateResponse(struct soap*, struct ns__dilateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__dilateResponse(struct soap*, const struct ns__dilateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__dilateResponse(struct soap*, const char*, int, const struct ns__dilateResponse *, const char*);
SOAP_FMAC3 struct ns__dilateResponse * SOAP_FMAC4 soap_in_ns__dilateResponse(struct soap*, const char*, struct ns__dilateResponse *, const char*);

#ifndef soap_write_ns__dilateResponse
#define soap_write_ns__dilateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__dilateResponse(soap, data), 0) || soap_put_ns__dilateResponse(soap, data, "ns:dilateResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__dilateResponse(struct soap*, const struct ns__dilateResponse *, const char*, const char*);

#ifndef soap_read_ns__dilateResponse
#define soap_read_ns__dilateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__dilateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__dilateResponse * SOAP_FMAC4 soap_get_ns__dilateResponse(struct soap*, struct ns__dilateResponse *, const char*, const char*);

#define soap_new_ns__dilateResponse(soap, n) soap_instantiate_ns__dilateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__dilateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__dilateResponse * SOAP_FMAC2 soap_instantiate_ns__dilateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__dilateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erode
#define SOAP_TYPE_ns__erode (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erode(struct soap*, struct ns__erode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erode(struct soap*, const struct ns__erode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erode(struct soap*, const char*, int, const struct ns__erode *, const char*);
SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_in_ns__erode(struct soap*, const char*, struct ns__erode *, const char*);

#ifndef soap_write_ns__erode
#define soap_write_ns__erode(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erode(soap, data), 0) || soap_put_ns__erode(soap, data, "ns:erode", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erode(struct soap*, const struct ns__erode *, const char*, const char*);

#ifndef soap_read_ns__erode
#define soap_read_ns__erode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erode(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erode * SOAP_FMAC4 soap_get_ns__erode(struct soap*, struct ns__erode *, const char*, const char*);

#define soap_new_ns__erode(soap, n) soap_instantiate_ns__erode(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erode(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erode * SOAP_FMAC2 soap_instantiate_ns__erode(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__erodeResponse
#define SOAP_TYPE_ns__erodeResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__erodeResponse(struct soap*, struct ns__erodeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__erodeResponse(struct soap*, const char*, int, const struct ns__erodeResponse *, const char*);
SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_in_ns__erodeResponse(struct soap*, const char*, struct ns__erodeResponse *, const char*);

#ifndef soap_write_ns__erodeResponse
#define soap_write_ns__erodeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__erodeResponse(soap, data), 0) || soap_put_ns__erodeResponse(soap, data, "ns:erodeResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__erodeResponse(struct soap*, const struct ns__erodeResponse *, const char*, const char*);

#ifndef soap_read_ns__erodeResponse
#define soap_read_ns__erodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__erodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__erodeResponse * SOAP_FMAC4 soap_get_ns__erodeResponse(struct soap*, struct ns__erodeResponse *, const char*, const char*);

#define soap_new_ns__erodeResponse(soap, n) soap_instantiate_ns__erodeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__erodeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__erodeResponse * SOAP_FMAC2 soap_instantiate_ns__erodeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__erodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GaussianBlur
#define SOAP_TYPE_ns__GaussianBlur (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GaussianBlur(struct soap*, struct ns__GaussianBlur *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GaussianBlur(struct soap*, const struct ns__GaussianBlur *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GaussianBlur(struct soap*, const char*, int, const struct ns__GaussianBlur *, const char*);
SOAP_FMAC3 struct ns__GaussianBlur * SOAP_FMAC4 soap_in_ns__GaussianBlur(struct soap*, const char*, struct ns__GaussianBlur *, const char*);

#ifndef soap_write_ns__GaussianBlur
#define soap_write_ns__GaussianBlur(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__GaussianBlur(soap, data), 0) || soap_put_ns__GaussianBlur(soap, data, "ns:GaussianBlur", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GaussianBlur(struct soap*, const struct ns__GaussianBlur *, const char*, const char*);

#ifndef soap_read_ns__GaussianBlur
#define soap_read_ns__GaussianBlur(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GaussianBlur(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__GaussianBlur * SOAP_FMAC4 soap_get_ns__GaussianBlur(struct soap*, struct ns__GaussianBlur *, const char*, const char*);

#define soap_new_ns__GaussianBlur(soap, n) soap_instantiate_ns__GaussianBlur(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__GaussianBlur(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__GaussianBlur * SOAP_FMAC2 soap_instantiate_ns__GaussianBlur(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GaussianBlur(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__GaussianBlurResponse
#define SOAP_TYPE_ns__GaussianBlurResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__GaussianBlurResponse(struct soap*, struct ns__GaussianBlurResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__GaussianBlurResponse(struct soap*, const struct ns__GaussianBlurResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__GaussianBlurResponse(struct soap*, const char*, int, const struct ns__GaussianBlurResponse *, const char*);
SOAP_FMAC3 struct ns__GaussianBlurResponse * SOAP_FMAC4 soap_in_ns__GaussianBlurResponse(struct soap*, const char*, struct ns__GaussianBlurResponse *, const char*);

#ifndef soap_write_ns__GaussianBlurResponse
#define soap_write_ns__GaussianBlurResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__GaussianBlurResponse(soap, data), 0) || soap_put_ns__GaussianBlurResponse(soap, data, "ns:GaussianBlurResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__GaussianBlurResponse(struct soap*, const struct ns__GaussianBlurResponse *, const char*, const char*);

#ifndef soap_read_ns__GaussianBlurResponse
#define soap_read_ns__GaussianBlurResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__GaussianBlurResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__GaussianBlurResponse * SOAP_FMAC4 soap_get_ns__GaussianBlurResponse(struct soap*, struct ns__GaussianBlurResponse *, const char*, const char*);

#define soap_new_ns__GaussianBlurResponse(soap, n) soap_instantiate_ns__GaussianBlurResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__GaussianBlurResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__GaussianBlurResponse * SOAP_FMAC2 soap_instantiate_ns__GaussianBlurResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__GaussianBlurResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__blur
#define SOAP_TYPE_ns__blur (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__blur(struct soap*, struct ns__blur *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__blur(struct soap*, const struct ns__blur *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__blur(struct soap*, const char*, int, const struct ns__blur *, const char*);
SOAP_FMAC3 struct ns__blur * SOAP_FMAC4 soap_in_ns__blur(struct soap*, const char*, struct ns__blur *, const char*);

#ifndef soap_write_ns__blur
#define soap_write_ns__blur(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__blur(soap, data), 0) || soap_put_ns__blur(soap, data, "ns:blur", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__blur(struct soap*, const struct ns__blur *, const char*, const char*);

#ifndef soap_read_ns__blur
#define soap_read_ns__blur(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__blur(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__blur * SOAP_FMAC4 soap_get_ns__blur(struct soap*, struct ns__blur *, const char*, const char*);

#define soap_new_ns__blur(soap, n) soap_instantiate_ns__blur(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__blur(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__blur * SOAP_FMAC2 soap_instantiate_ns__blur(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__blur(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__blurResponse
#define SOAP_TYPE_ns__blurResponse (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__blurResponse(struct soap*, struct ns__blurResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__blurResponse(struct soap*, const struct ns__blurResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__blurResponse(struct soap*, const char*, int, const struct ns__blurResponse *, const char*);
SOAP_FMAC3 struct ns__blurResponse * SOAP_FMAC4 soap_in_ns__blurResponse(struct soap*, const char*, struct ns__blurResponse *, const char*);

#ifndef soap_write_ns__blurResponse
#define soap_write_ns__blurResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__blurResponse(soap, data), 0) || soap_put_ns__blurResponse(soap, data, "ns:blurResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__blurResponse(struct soap*, const struct ns__blurResponse *, const char*, const char*);

#ifndef soap_read_ns__blurResponse
#define soap_read_ns__blurResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__blurResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__blurResponse * SOAP_FMAC4 soap_get_ns__blurResponse(struct soap*, struct ns__blurResponse *, const char*, const char*);

#define soap_new_ns__blurResponse(soap, n) soap_instantiate_ns__blurResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__blurResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__blurResponse * SOAP_FMAC2 soap_instantiate_ns__blurResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__blurResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
