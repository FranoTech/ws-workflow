/* soapServer.cpp
   Generated by gSOAP 2.8.14 from BasicStructures.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.14 2013-03-16 23:48:16 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:rowRange"))
		return soap_serve_ns__rowRange(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:colRange"))
		return soap_serve_ns__colRange(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:convertTo"))
		return soap_serve_ns__convertTo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:createMat"))
		return soap_serve_ns__createMat(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Inverse"))
		return soap_serve_ns__Inverse(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:mul"))
		return soap_serve_ns__mul(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:cross"))
		return soap_serve_ns__cross(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:dot"))
		return soap_serve_ns__dot(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:zeros"))
		return soap_serve_ns__zeros(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:ones"))
		return soap_serve_ns__ones(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:getMatDetail"))
		return soap_serve_ns__getMatDetail(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:printAllMatValue"))
		return soap_serve_ns__printAllMatValue(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:accessPixelValue"))
		return soap_serve_ns__accessPixelValue(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__rowRange(struct soap *soap)
{	struct ns__rowRange soap_tmp_ns__rowRange;
	struct ns__rowRangeResponse soap_tmp_ns__rowRangeResponse;
	soap_default_ns__rowRangeResponse(soap, &soap_tmp_ns__rowRangeResponse);
	soap_default_ns__rowRange(soap, &soap_tmp_ns__rowRange);
	soap->encodingStyle = "";
	if (!soap_get_ns__rowRange(soap, &soap_tmp_ns__rowRange, "ns:rowRange", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__rowRange(soap, soap_tmp_ns__rowRange.InputMatFilename, soap_tmp_ns__rowRange.startCol, soap_tmp_ns__rowRange.endCol, soap_tmp_ns__rowRangeResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__rowRangeResponse(soap, &soap_tmp_ns__rowRangeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__rowRangeResponse(soap, &soap_tmp_ns__rowRangeResponse, "ns:rowRangeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__rowRangeResponse(soap, &soap_tmp_ns__rowRangeResponse, "ns:rowRangeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__colRange(struct soap *soap)
{	struct ns__colRange soap_tmp_ns__colRange;
	struct ns__colRangeResponse soap_tmp_ns__colRangeResponse;
	soap_default_ns__colRangeResponse(soap, &soap_tmp_ns__colRangeResponse);
	soap_default_ns__colRange(soap, &soap_tmp_ns__colRange);
	soap->encodingStyle = "";
	if (!soap_get_ns__colRange(soap, &soap_tmp_ns__colRange, "ns:colRange", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__colRange(soap, soap_tmp_ns__colRange.InputMatFilename, soap_tmp_ns__colRange.startCol, soap_tmp_ns__colRange.endCol, soap_tmp_ns__colRangeResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__colRangeResponse(soap, &soap_tmp_ns__colRangeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__colRangeResponse(soap, &soap_tmp_ns__colRangeResponse, "ns:colRangeResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__colRangeResponse(soap, &soap_tmp_ns__colRangeResponse, "ns:colRangeResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__convertTo(struct soap *soap)
{	struct ns__convertTo soap_tmp_ns__convertTo;
	struct ns__convertToResponse soap_tmp_ns__convertToResponse;
	soap_default_ns__convertToResponse(soap, &soap_tmp_ns__convertToResponse);
	soap_default_ns__convertTo(soap, &soap_tmp_ns__convertTo);
	soap->encodingStyle = "";
	if (!soap_get_ns__convertTo(soap, &soap_tmp_ns__convertTo, "ns:convertTo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__convertTo(soap, soap_tmp_ns__convertTo.InputMatFilename, soap_tmp_ns__convertTo.types, soap_tmp_ns__convertTo.alpha_D, soap_tmp_ns__convertTo.beta_D, soap_tmp_ns__convertToResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__convertToResponse(soap, &soap_tmp_ns__convertToResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__convertToResponse(soap, &soap_tmp_ns__convertToResponse, "ns:convertToResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__convertToResponse(soap, &soap_tmp_ns__convertToResponse, "ns:convertToResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__createMat(struct soap *soap)
{	struct ns__createMat soap_tmp_ns__createMat;
	struct ns__createMatResponse soap_tmp_ns__createMatResponse;
	soap_default_ns__createMatResponse(soap, &soap_tmp_ns__createMatResponse);
	soap_default_ns__createMat(soap, &soap_tmp_ns__createMat);
	soap->encodingStyle = "";
	if (!soap_get_ns__createMat(soap, &soap_tmp_ns__createMat, "ns:createMat", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__createMat(soap, soap_tmp_ns__createMat.rows, soap_tmp_ns__createMat.columns, soap_tmp_ns__createMat.type, soap_tmp_ns__createMat.scalar, soap_tmp_ns__createMatResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__createMatResponse(soap, &soap_tmp_ns__createMatResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__createMatResponse(soap, &soap_tmp_ns__createMatResponse, "ns:createMatResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__createMatResponse(soap, &soap_tmp_ns__createMatResponse, "ns:createMatResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Inverse(struct soap *soap)
{	struct ns__Inverse soap_tmp_ns__Inverse;
	struct ns__InverseResponse soap_tmp_ns__InverseResponse;
	soap_default_ns__InverseResponse(soap, &soap_tmp_ns__InverseResponse);
	soap_default_ns__Inverse(soap, &soap_tmp_ns__Inverse);
	soap->encodingStyle = "";
	if (!soap_get_ns__Inverse(soap, &soap_tmp_ns__Inverse, "ns:Inverse", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Inverse(soap, soap_tmp_ns__Inverse.InputMatFilename, soap_tmp_ns__Inverse.InvMethod_D, soap_tmp_ns__InverseResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__InverseResponse(soap, &soap_tmp_ns__InverseResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__InverseResponse(soap, &soap_tmp_ns__InverseResponse, "ns:InverseResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__InverseResponse(soap, &soap_tmp_ns__InverseResponse, "ns:InverseResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__mul(struct soap *soap)
{	struct ns__mul soap_tmp_ns__mul;
	struct ns__mulResponse soap_tmp_ns__mulResponse;
	soap_default_ns__mulResponse(soap, &soap_tmp_ns__mulResponse);
	soap_default_ns__mul(soap, &soap_tmp_ns__mul);
	soap->encodingStyle = "";
	if (!soap_get_ns__mul(soap, &soap_tmp_ns__mul, "ns:mul", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__mul(soap, soap_tmp_ns__mul.InputMatFilename, soap_tmp_ns__mul.AnotherMatFilename, soap_tmp_ns__mul.scale_D, soap_tmp_ns__mulResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__mulResponse(soap, &soap_tmp_ns__mulResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__mulResponse(soap, &soap_tmp_ns__mulResponse, "ns:mulResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__mulResponse(soap, &soap_tmp_ns__mulResponse, "ns:mulResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__cross(struct soap *soap)
{	struct ns__cross soap_tmp_ns__cross;
	struct ns__crossResponse soap_tmp_ns__crossResponse;
	soap_default_ns__crossResponse(soap, &soap_tmp_ns__crossResponse);
	soap_default_ns__cross(soap, &soap_tmp_ns__cross);
	soap->encodingStyle = "";
	if (!soap_get_ns__cross(soap, &soap_tmp_ns__cross, "ns:cross", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__cross(soap, soap_tmp_ns__cross.InputMatFilename, soap_tmp_ns__cross.AnotherMatFilename, soap_tmp_ns__crossResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__crossResponse(soap, &soap_tmp_ns__crossResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__crossResponse(soap, &soap_tmp_ns__crossResponse, "ns:crossResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__crossResponse(soap, &soap_tmp_ns__crossResponse, "ns:crossResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__dot(struct soap *soap)
{	struct ns__dot soap_tmp_ns__dot;
	struct ns__dotResponse soap_tmp_ns__dotResponse;
	soap_default_ns__dotResponse(soap, &soap_tmp_ns__dotResponse);
	soap_default_ns__dot(soap, &soap_tmp_ns__dot);
	soap->encodingStyle = "";
	if (!soap_get_ns__dot(soap, &soap_tmp_ns__dot, "ns:dot", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__dot(soap, soap_tmp_ns__dot.InputMatFilename, soap_tmp_ns__dot.AnotherMatFilename, soap_tmp_ns__dotResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__dotResponse(soap, &soap_tmp_ns__dotResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__dotResponse(soap, &soap_tmp_ns__dotResponse, "ns:dotResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__dotResponse(soap, &soap_tmp_ns__dotResponse, "ns:dotResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__zeros(struct soap *soap)
{	struct ns__zeros soap_tmp_ns__zeros;
	struct ns__zerosResponse soap_tmp_ns__zerosResponse;
	soap_default_ns__zerosResponse(soap, &soap_tmp_ns__zerosResponse);
	soap_default_ns__zeros(soap, &soap_tmp_ns__zeros);
	soap->encodingStyle = "";
	if (!soap_get_ns__zeros(soap, &soap_tmp_ns__zeros, "ns:zeros", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__zeros(soap, soap_tmp_ns__zeros.rows, soap_tmp_ns__zeros.columns, soap_tmp_ns__zeros.type, soap_tmp_ns__zerosResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__zerosResponse(soap, &soap_tmp_ns__zerosResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__zerosResponse(soap, &soap_tmp_ns__zerosResponse, "ns:zerosResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__zerosResponse(soap, &soap_tmp_ns__zerosResponse, "ns:zerosResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__ones(struct soap *soap)
{	struct ns__ones soap_tmp_ns__ones;
	struct ns__onesResponse soap_tmp_ns__onesResponse;
	soap_default_ns__onesResponse(soap, &soap_tmp_ns__onesResponse);
	soap_default_ns__ones(soap, &soap_tmp_ns__ones);
	soap->encodingStyle = "";
	if (!soap_get_ns__ones(soap, &soap_tmp_ns__ones, "ns:ones", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__ones(soap, soap_tmp_ns__ones.rows, soap_tmp_ns__ones.columns, soap_tmp_ns__ones.fillWith, soap_tmp_ns__ones.type, soap_tmp_ns__onesResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__onesResponse(soap, &soap_tmp_ns__onesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__onesResponse(soap, &soap_tmp_ns__onesResponse, "ns:onesResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__onesResponse(soap, &soap_tmp_ns__onesResponse, "ns:onesResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getMatDetail(struct soap *soap)
{	struct ns__getMatDetail soap_tmp_ns__getMatDetail;
	ns__MatDetail detail;
	detail.soap_default(soap);
	soap_default_ns__getMatDetail(soap, &soap_tmp_ns__getMatDetail);
	soap->encodingStyle = "";
	if (!soap_get_ns__getMatDetail(soap, &soap_tmp_ns__getMatDetail, "ns:getMatDetail", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__getMatDetail(soap, soap_tmp_ns__getMatDetail.InputMatFilename, detail);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	detail.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || detail.soap_put(soap, "ns:MatDetail", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || detail.soap_put(soap, "ns:MatDetail", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__printAllMatValue(struct soap *soap)
{	struct ns__printAllMatValue soap_tmp_ns__printAllMatValue;
	struct ns__printAllMatValueResponse soap_tmp_ns__printAllMatValueResponse;
	soap_default_ns__printAllMatValueResponse(soap, &soap_tmp_ns__printAllMatValueResponse);
	soap_default_ns__printAllMatValue(soap, &soap_tmp_ns__printAllMatValue);
	soap->encodingStyle = "";
	if (!soap_get_ns__printAllMatValue(soap, &soap_tmp_ns__printAllMatValue, "ns:printAllMatValue", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__printAllMatValue(soap, soap_tmp_ns__printAllMatValue.InputMatFilename, soap_tmp_ns__printAllMatValueResponse.OutputMat);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__printAllMatValueResponse(soap, &soap_tmp_ns__printAllMatValueResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__printAllMatValueResponse(soap, &soap_tmp_ns__printAllMatValueResponse, "ns:printAllMatValueResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__printAllMatValueResponse(soap, &soap_tmp_ns__printAllMatValueResponse, "ns:printAllMatValueResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__accessPixelValue(struct soap *soap)
{	struct ns__accessPixelValue soap_tmp_ns__accessPixelValue;
	struct ns__accessPixelValueResponse soap_tmp_ns__accessPixelValueResponse;
	soap_default_ns__accessPixelValueResponse(soap, &soap_tmp_ns__accessPixelValueResponse);
	soap_default_ns__accessPixelValue(soap, &soap_tmp_ns__accessPixelValue);
	soap->encodingStyle = "";
	if (!soap_get_ns__accessPixelValue(soap, &soap_tmp_ns__accessPixelValue, "ns:accessPixelValue", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__accessPixelValue(soap, soap_tmp_ns__accessPixelValue.InputMatFilename, soap_tmp_ns__accessPixelValue.returnType, soap_tmp_ns__accessPixelValue.intToSet, soap_tmp_ns__accessPixelValue.floatToSet, soap_tmp_ns__accessPixelValue.pixelI, soap_tmp_ns__accessPixelValue.pixelJ, soap_tmp_ns__accessPixelValue.channel, soap_tmp_ns__accessPixelValueResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__accessPixelValueResponse(soap, &soap_tmp_ns__accessPixelValueResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__accessPixelValueResponse(soap, &soap_tmp_ns__accessPixelValueResponse, "ns:accessPixelValueResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__accessPixelValueResponse(soap, &soap_tmp_ns__accessPixelValueResponse, "ns:accessPixelValueResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
