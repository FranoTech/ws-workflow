/* soapServer.cpp
   Generated by gSOAP 2.8.14 from ArrayOperation.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.14 2013-03-16 23:49:45 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Or"))
		return soap_serve_ns__Or(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:And"))
		return soap_serve_ns__And(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Xor"))
		return soap_serve_ns__Xor(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:Not"))
		return soap_serve_ns__Not(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:addWeighted"))
		return soap_serve_ns__addWeighted(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:add"))
		return soap_serve_ns__add(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:subtract"))
		return soap_serve_ns__subtract(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:abs"))
		return soap_serve_ns__abs(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:absdiff"))
		return soap_serve_ns__absdiff(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:sqrt"))
		return soap_serve_ns__sqrt(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Or(struct soap *soap)
{	struct ns__Or soap_tmp_ns__Or;
	struct ns__OrResponse soap_tmp_ns__OrResponse;
	soap_default_ns__OrResponse(soap, &soap_tmp_ns__OrResponse);
	soap_default_ns__Or(soap, &soap_tmp_ns__Or);
	soap->encodingStyle = "";
	if (!soap_get_ns__Or(soap, &soap_tmp_ns__Or, "ns:Or", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Or(soap, soap_tmp_ns__Or.src1, soap_tmp_ns__Or.src2, soap_tmp_ns__OrResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__OrResponse(soap, &soap_tmp_ns__OrResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__OrResponse(soap, &soap_tmp_ns__OrResponse, "ns:OrResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__OrResponse(soap, &soap_tmp_ns__OrResponse, "ns:OrResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__And(struct soap *soap)
{	struct ns__And soap_tmp_ns__And;
	struct ns__AndResponse soap_tmp_ns__AndResponse;
	soap_default_ns__AndResponse(soap, &soap_tmp_ns__AndResponse);
	soap_default_ns__And(soap, &soap_tmp_ns__And);
	soap->encodingStyle = "";
	if (!soap_get_ns__And(soap, &soap_tmp_ns__And, "ns:And", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__And(soap, soap_tmp_ns__And.src1, soap_tmp_ns__And.src2, soap_tmp_ns__AndResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__AndResponse(soap, &soap_tmp_ns__AndResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__AndResponse(soap, &soap_tmp_ns__AndResponse, "ns:AndResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__AndResponse(soap, &soap_tmp_ns__AndResponse, "ns:AndResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Xor(struct soap *soap)
{	struct ns__Xor soap_tmp_ns__Xor;
	struct ns__XorResponse soap_tmp_ns__XorResponse;
	soap_default_ns__XorResponse(soap, &soap_tmp_ns__XorResponse);
	soap_default_ns__Xor(soap, &soap_tmp_ns__Xor);
	soap->encodingStyle = "";
	if (!soap_get_ns__Xor(soap, &soap_tmp_ns__Xor, "ns:Xor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Xor(soap, soap_tmp_ns__Xor.src1, soap_tmp_ns__Xor.src2, soap_tmp_ns__XorResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__XorResponse(soap, &soap_tmp_ns__XorResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__XorResponse(soap, &soap_tmp_ns__XorResponse, "ns:XorResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__XorResponse(soap, &soap_tmp_ns__XorResponse, "ns:XorResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Not(struct soap *soap)
{	struct ns__Not soap_tmp_ns__Not;
	struct ns__NotResponse soap_tmp_ns__NotResponse;
	soap_default_ns__NotResponse(soap, &soap_tmp_ns__NotResponse);
	soap_default_ns__Not(soap, &soap_tmp_ns__Not);
	soap->encodingStyle = "";
	if (!soap_get_ns__Not(soap, &soap_tmp_ns__Not, "ns:Not", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__Not(soap, soap_tmp_ns__Not.src, soap_tmp_ns__NotResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__NotResponse(soap, &soap_tmp_ns__NotResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__NotResponse(soap, &soap_tmp_ns__NotResponse, "ns:NotResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__NotResponse(soap, &soap_tmp_ns__NotResponse, "ns:NotResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__addWeighted(struct soap *soap)
{	struct ns__addWeighted soap_tmp_ns__addWeighted;
	struct ns__addWeightedResponse soap_tmp_ns__addWeightedResponse;
	soap_default_ns__addWeightedResponse(soap, &soap_tmp_ns__addWeightedResponse);
	soap_default_ns__addWeighted(soap, &soap_tmp_ns__addWeighted);
	soap->encodingStyle = "";
	if (!soap_get_ns__addWeighted(soap, &soap_tmp_ns__addWeighted, "ns:addWeighted", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__addWeighted(soap, soap_tmp_ns__addWeighted.InputMatFilename1, soap_tmp_ns__addWeighted.alpha, soap_tmp_ns__addWeighted.InputMatFilename2, soap_tmp_ns__addWeighted.beta, soap_tmp_ns__addWeighted.gamma, soap_tmp_ns__addWeighted.dtype_D, soap_tmp_ns__addWeightedResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__addWeightedResponse(soap, &soap_tmp_ns__addWeightedResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__addWeightedResponse(soap, &soap_tmp_ns__addWeightedResponse, "ns:addWeightedResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__addWeightedResponse(soap, &soap_tmp_ns__addWeightedResponse, "ns:addWeightedResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__add(struct soap *soap)
{	struct ns__add soap_tmp_ns__add;
	struct ns__addResponse soap_tmp_ns__addResponse;
	soap_default_ns__addResponse(soap, &soap_tmp_ns__addResponse);
	soap_default_ns__add(soap, &soap_tmp_ns__add);
	soap->encodingStyle = "";
	if (!soap_get_ns__add(soap, &soap_tmp_ns__add, "ns:add", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__add(soap, soap_tmp_ns__add.InputMatFilename1, soap_tmp_ns__add.InputMatFilename2, soap_tmp_ns__add.maskFilename_D, soap_tmp_ns__add.dtype_D, soap_tmp_ns__addResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__addResponse(soap, &soap_tmp_ns__addResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__addResponse(soap, &soap_tmp_ns__addResponse, "ns:addResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__addResponse(soap, &soap_tmp_ns__addResponse, "ns:addResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__subtract(struct soap *soap)
{	struct ns__subtract soap_tmp_ns__subtract;
	struct ns__subtractResponse soap_tmp_ns__subtractResponse;
	soap_default_ns__subtractResponse(soap, &soap_tmp_ns__subtractResponse);
	soap_default_ns__subtract(soap, &soap_tmp_ns__subtract);
	soap->encodingStyle = "";
	if (!soap_get_ns__subtract(soap, &soap_tmp_ns__subtract, "ns:subtract", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__subtract(soap, soap_tmp_ns__subtract.InputMatFilename1, soap_tmp_ns__subtract.InputMatFilename2, soap_tmp_ns__subtract.maskFilename_D, soap_tmp_ns__subtract.dtype_D, soap_tmp_ns__subtractResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__subtractResponse(soap, &soap_tmp_ns__subtractResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__subtractResponse(soap, &soap_tmp_ns__subtractResponse, "ns:subtractResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__subtractResponse(soap, &soap_tmp_ns__subtractResponse, "ns:subtractResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__abs(struct soap *soap)
{	struct ns__abs soap_tmp_ns__abs;
	struct ns__absResponse soap_tmp_ns__absResponse;
	soap_default_ns__absResponse(soap, &soap_tmp_ns__absResponse);
	soap_default_ns__abs(soap, &soap_tmp_ns__abs);
	soap->encodingStyle = "";
	if (!soap_get_ns__abs(soap, &soap_tmp_ns__abs, "ns:abs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__abs(soap, soap_tmp_ns__abs.InputMatFilename, soap_tmp_ns__absResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__absResponse(soap, &soap_tmp_ns__absResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__absResponse(soap, &soap_tmp_ns__absResponse, "ns:absResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__absResponse(soap, &soap_tmp_ns__absResponse, "ns:absResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__absdiff(struct soap *soap)
{	struct ns__absdiff soap_tmp_ns__absdiff;
	struct ns__absdiffResponse soap_tmp_ns__absdiffResponse;
	soap_default_ns__absdiffResponse(soap, &soap_tmp_ns__absdiffResponse);
	soap_default_ns__absdiff(soap, &soap_tmp_ns__absdiff);
	soap->encodingStyle = "";
	if (!soap_get_ns__absdiff(soap, &soap_tmp_ns__absdiff, "ns:absdiff", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__absdiff(soap, soap_tmp_ns__absdiff.InputMatFilename1, soap_tmp_ns__absdiff.InputMatFilename2, soap_tmp_ns__absdiffResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__absdiffResponse(soap, &soap_tmp_ns__absdiffResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__absdiffResponse(soap, &soap_tmp_ns__absdiffResponse, "ns:absdiffResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__absdiffResponse(soap, &soap_tmp_ns__absdiffResponse, "ns:absdiffResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__sqrt(struct soap *soap)
{	struct ns__sqrt soap_tmp_ns__sqrt;
	struct ns__sqrtResponse soap_tmp_ns__sqrtResponse;
	soap_default_ns__sqrtResponse(soap, &soap_tmp_ns__sqrtResponse);
	soap_default_ns__sqrt(soap, &soap_tmp_ns__sqrt);
	soap->encodingStyle = "";
	if (!soap_get_ns__sqrt(soap, &soap_tmp_ns__sqrt, "ns:sqrt", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__sqrt(soap, soap_tmp_ns__sqrt.InputMatFilename, soap_tmp_ns__sqrtResponse.OutputMatFilename);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__sqrtResponse(soap, &soap_tmp_ns__sqrtResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__sqrtResponse(soap, &soap_tmp_ns__sqrtResponse, "ns:sqrtResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__sqrtResponse(soap, &soap_tmp_ns__sqrtResponse, "ns:sqrtResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
