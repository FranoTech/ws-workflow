/* soapH.h
   Generated by gSOAP 2.8.8 from ArrayOperation.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (7)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns__sqrt
#define SOAP_TYPE_ns__sqrt (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sqrt(struct soap*, struct ns__sqrt *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sqrt(struct soap*, const struct ns__sqrt *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sqrt(struct soap*, const char*, int, const struct ns__sqrt *, const char*);
SOAP_FMAC3 struct ns__sqrt * SOAP_FMAC4 soap_in_ns__sqrt(struct soap*, const char*, struct ns__sqrt *, const char*);

#ifndef soap_write_ns__sqrt
#define soap_write_ns__sqrt(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sqrt(soap, data), 0) || soap_put_ns__sqrt(soap, data, "ns:sqrt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sqrt(struct soap*, const struct ns__sqrt *, const char*, const char*);

#ifndef soap_read_ns__sqrt
#define soap_read_ns__sqrt(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sqrt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__sqrt * SOAP_FMAC4 soap_get_ns__sqrt(struct soap*, struct ns__sqrt *, const char*, const char*);

#define soap_new_ns__sqrt(soap, n) soap_instantiate_ns__sqrt(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sqrt(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sqrt * SOAP_FMAC2 soap_instantiate_ns__sqrt(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sqrt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__sqrtResponse
#define SOAP_TYPE_ns__sqrtResponse (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__sqrtResponse(struct soap*, struct ns__sqrtResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__sqrtResponse(struct soap*, const struct ns__sqrtResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__sqrtResponse(struct soap*, const char*, int, const struct ns__sqrtResponse *, const char*);
SOAP_FMAC3 struct ns__sqrtResponse * SOAP_FMAC4 soap_in_ns__sqrtResponse(struct soap*, const char*, struct ns__sqrtResponse *, const char*);

#ifndef soap_write_ns__sqrtResponse
#define soap_write_ns__sqrtResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__sqrtResponse(soap, data), 0) || soap_put_ns__sqrtResponse(soap, data, "ns:sqrtResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__sqrtResponse(struct soap*, const struct ns__sqrtResponse *, const char*, const char*);

#ifndef soap_read_ns__sqrtResponse
#define soap_read_ns__sqrtResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__sqrtResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__sqrtResponse * SOAP_FMAC4 soap_get_ns__sqrtResponse(struct soap*, struct ns__sqrtResponse *, const char*, const char*);

#define soap_new_ns__sqrtResponse(soap, n) soap_instantiate_ns__sqrtResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__sqrtResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__sqrtResponse * SOAP_FMAC2 soap_instantiate_ns__sqrtResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__sqrtResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__absdiff
#define SOAP_TYPE_ns__absdiff (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__absdiff(struct soap*, struct ns__absdiff *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__absdiff(struct soap*, const struct ns__absdiff *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__absdiff(struct soap*, const char*, int, const struct ns__absdiff *, const char*);
SOAP_FMAC3 struct ns__absdiff * SOAP_FMAC4 soap_in_ns__absdiff(struct soap*, const char*, struct ns__absdiff *, const char*);

#ifndef soap_write_ns__absdiff
#define soap_write_ns__absdiff(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__absdiff(soap, data), 0) || soap_put_ns__absdiff(soap, data, "ns:absdiff", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__absdiff(struct soap*, const struct ns__absdiff *, const char*, const char*);

#ifndef soap_read_ns__absdiff
#define soap_read_ns__absdiff(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__absdiff(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__absdiff * SOAP_FMAC4 soap_get_ns__absdiff(struct soap*, struct ns__absdiff *, const char*, const char*);

#define soap_new_ns__absdiff(soap, n) soap_instantiate_ns__absdiff(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__absdiff(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__absdiff * SOAP_FMAC2 soap_instantiate_ns__absdiff(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__absdiff(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__absdiffResponse
#define SOAP_TYPE_ns__absdiffResponse (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__absdiffResponse(struct soap*, struct ns__absdiffResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__absdiffResponse(struct soap*, const struct ns__absdiffResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__absdiffResponse(struct soap*, const char*, int, const struct ns__absdiffResponse *, const char*);
SOAP_FMAC3 struct ns__absdiffResponse * SOAP_FMAC4 soap_in_ns__absdiffResponse(struct soap*, const char*, struct ns__absdiffResponse *, const char*);

#ifndef soap_write_ns__absdiffResponse
#define soap_write_ns__absdiffResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__absdiffResponse(soap, data), 0) || soap_put_ns__absdiffResponse(soap, data, "ns:absdiffResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__absdiffResponse(struct soap*, const struct ns__absdiffResponse *, const char*, const char*);

#ifndef soap_read_ns__absdiffResponse
#define soap_read_ns__absdiffResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__absdiffResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__absdiffResponse * SOAP_FMAC4 soap_get_ns__absdiffResponse(struct soap*, struct ns__absdiffResponse *, const char*, const char*);

#define soap_new_ns__absdiffResponse(soap, n) soap_instantiate_ns__absdiffResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__absdiffResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__absdiffResponse * SOAP_FMAC2 soap_instantiate_ns__absdiffResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__absdiffResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__abs
#define SOAP_TYPE_ns__abs (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__abs(struct soap*, struct ns__abs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__abs(struct soap*, const struct ns__abs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__abs(struct soap*, const char*, int, const struct ns__abs *, const char*);
SOAP_FMAC3 struct ns__abs * SOAP_FMAC4 soap_in_ns__abs(struct soap*, const char*, struct ns__abs *, const char*);

#ifndef soap_write_ns__abs
#define soap_write_ns__abs(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__abs(soap, data), 0) || soap_put_ns__abs(soap, data, "ns:abs", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__abs(struct soap*, const struct ns__abs *, const char*, const char*);

#ifndef soap_read_ns__abs
#define soap_read_ns__abs(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__abs(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__abs * SOAP_FMAC4 soap_get_ns__abs(struct soap*, struct ns__abs *, const char*, const char*);

#define soap_new_ns__abs(soap, n) soap_instantiate_ns__abs(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__abs(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__abs * SOAP_FMAC2 soap_instantiate_ns__abs(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__abs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__absResponse
#define SOAP_TYPE_ns__absResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__absResponse(struct soap*, struct ns__absResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__absResponse(struct soap*, const struct ns__absResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__absResponse(struct soap*, const char*, int, const struct ns__absResponse *, const char*);
SOAP_FMAC3 struct ns__absResponse * SOAP_FMAC4 soap_in_ns__absResponse(struct soap*, const char*, struct ns__absResponse *, const char*);

#ifndef soap_write_ns__absResponse
#define soap_write_ns__absResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__absResponse(soap, data), 0) || soap_put_ns__absResponse(soap, data, "ns:absResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__absResponse(struct soap*, const struct ns__absResponse *, const char*, const char*);

#ifndef soap_read_ns__absResponse
#define soap_read_ns__absResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__absResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__absResponse * SOAP_FMAC4 soap_get_ns__absResponse(struct soap*, struct ns__absResponse *, const char*, const char*);

#define soap_new_ns__absResponse(soap, n) soap_instantiate_ns__absResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__absResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__absResponse * SOAP_FMAC2 soap_instantiate_ns__absResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__absResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__subtract
#define SOAP_TYPE_ns__subtract (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__subtract(struct soap*, struct ns__subtract *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__subtract(struct soap*, const struct ns__subtract *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__subtract(struct soap*, const char*, int, const struct ns__subtract *, const char*);
SOAP_FMAC3 struct ns__subtract * SOAP_FMAC4 soap_in_ns__subtract(struct soap*, const char*, struct ns__subtract *, const char*);

#ifndef soap_write_ns__subtract
#define soap_write_ns__subtract(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__subtract(soap, data), 0) || soap_put_ns__subtract(soap, data, "ns:subtract", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__subtract(struct soap*, const struct ns__subtract *, const char*, const char*);

#ifndef soap_read_ns__subtract
#define soap_read_ns__subtract(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__subtract(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__subtract * SOAP_FMAC4 soap_get_ns__subtract(struct soap*, struct ns__subtract *, const char*, const char*);

#define soap_new_ns__subtract(soap, n) soap_instantiate_ns__subtract(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__subtract(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__subtract * SOAP_FMAC2 soap_instantiate_ns__subtract(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__subtract(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__subtractResponse
#define SOAP_TYPE_ns__subtractResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__subtractResponse(struct soap*, struct ns__subtractResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__subtractResponse(struct soap*, const struct ns__subtractResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__subtractResponse(struct soap*, const char*, int, const struct ns__subtractResponse *, const char*);
SOAP_FMAC3 struct ns__subtractResponse * SOAP_FMAC4 soap_in_ns__subtractResponse(struct soap*, const char*, struct ns__subtractResponse *, const char*);

#ifndef soap_write_ns__subtractResponse
#define soap_write_ns__subtractResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__subtractResponse(soap, data), 0) || soap_put_ns__subtractResponse(soap, data, "ns:subtractResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__subtractResponse(struct soap*, const struct ns__subtractResponse *, const char*, const char*);

#ifndef soap_read_ns__subtractResponse
#define soap_read_ns__subtractResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__subtractResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__subtractResponse * SOAP_FMAC4 soap_get_ns__subtractResponse(struct soap*, struct ns__subtractResponse *, const char*, const char*);

#define soap_new_ns__subtractResponse(soap, n) soap_instantiate_ns__subtractResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__subtractResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__subtractResponse * SOAP_FMAC2 soap_instantiate_ns__subtractResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__subtractResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__add
#define SOAP_TYPE_ns__add (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__add(struct soap*, struct ns__add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__add(struct soap*, const struct ns__add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__add(struct soap*, const char*, int, const struct ns__add *, const char*);
SOAP_FMAC3 struct ns__add * SOAP_FMAC4 soap_in_ns__add(struct soap*, const char*, struct ns__add *, const char*);

#ifndef soap_write_ns__add
#define soap_write_ns__add(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__add(soap, data), 0) || soap_put_ns__add(soap, data, "ns:add", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__add(struct soap*, const struct ns__add *, const char*, const char*);

#ifndef soap_read_ns__add
#define soap_read_ns__add(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__add(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__add * SOAP_FMAC4 soap_get_ns__add(struct soap*, struct ns__add *, const char*, const char*);

#define soap_new_ns__add(soap, n) soap_instantiate_ns__add(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__add(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__add * SOAP_FMAC2 soap_instantiate_ns__add(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__add(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__addResponse
#define SOAP_TYPE_ns__addResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__addResponse(struct soap*, struct ns__addResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__addResponse(struct soap*, const struct ns__addResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__addResponse(struct soap*, const char*, int, const struct ns__addResponse *, const char*);
SOAP_FMAC3 struct ns__addResponse * SOAP_FMAC4 soap_in_ns__addResponse(struct soap*, const char*, struct ns__addResponse *, const char*);

#ifndef soap_write_ns__addResponse
#define soap_write_ns__addResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__addResponse(soap, data), 0) || soap_put_ns__addResponse(soap, data, "ns:addResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__addResponse(struct soap*, const struct ns__addResponse *, const char*, const char*);

#ifndef soap_read_ns__addResponse
#define soap_read_ns__addResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__addResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__addResponse * SOAP_FMAC4 soap_get_ns__addResponse(struct soap*, struct ns__addResponse *, const char*, const char*);

#define soap_new_ns__addResponse(soap, n) soap_instantiate_ns__addResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__addResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__addResponse * SOAP_FMAC2 soap_instantiate_ns__addResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__addResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__addWeighted
#define SOAP_TYPE_ns__addWeighted (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__addWeighted(struct soap*, struct ns__addWeighted *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__addWeighted(struct soap*, const struct ns__addWeighted *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__addWeighted(struct soap*, const char*, int, const struct ns__addWeighted *, const char*);
SOAP_FMAC3 struct ns__addWeighted * SOAP_FMAC4 soap_in_ns__addWeighted(struct soap*, const char*, struct ns__addWeighted *, const char*);

#ifndef soap_write_ns__addWeighted
#define soap_write_ns__addWeighted(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__addWeighted(soap, data), 0) || soap_put_ns__addWeighted(soap, data, "ns:addWeighted", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__addWeighted(struct soap*, const struct ns__addWeighted *, const char*, const char*);

#ifndef soap_read_ns__addWeighted
#define soap_read_ns__addWeighted(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__addWeighted(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__addWeighted * SOAP_FMAC4 soap_get_ns__addWeighted(struct soap*, struct ns__addWeighted *, const char*, const char*);

#define soap_new_ns__addWeighted(soap, n) soap_instantiate_ns__addWeighted(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__addWeighted(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__addWeighted * SOAP_FMAC2 soap_instantiate_ns__addWeighted(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__addWeighted(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__addWeightedResponse
#define SOAP_TYPE_ns__addWeightedResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__addWeightedResponse(struct soap*, struct ns__addWeightedResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__addWeightedResponse(struct soap*, const struct ns__addWeightedResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__addWeightedResponse(struct soap*, const char*, int, const struct ns__addWeightedResponse *, const char*);
SOAP_FMAC3 struct ns__addWeightedResponse * SOAP_FMAC4 soap_in_ns__addWeightedResponse(struct soap*, const char*, struct ns__addWeightedResponse *, const char*);

#ifndef soap_write_ns__addWeightedResponse
#define soap_write_ns__addWeightedResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__addWeightedResponse(soap, data), 0) || soap_put_ns__addWeightedResponse(soap, data, "ns:addWeightedResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__addWeightedResponse(struct soap*, const struct ns__addWeightedResponse *, const char*, const char*);

#ifndef soap_read_ns__addWeightedResponse
#define soap_read_ns__addWeightedResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__addWeightedResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__addWeightedResponse * SOAP_FMAC4 soap_get_ns__addWeightedResponse(struct soap*, struct ns__addWeightedResponse *, const char*, const char*);

#define soap_new_ns__addWeightedResponse(soap, n) soap_instantiate_ns__addWeightedResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__addWeightedResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__addWeightedResponse * SOAP_FMAC2 soap_instantiate_ns__addWeightedResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__addWeightedResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Not
#define SOAP_TYPE_ns__Not (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Not(struct soap*, struct ns__Not *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Not(struct soap*, const struct ns__Not *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Not(struct soap*, const char*, int, const struct ns__Not *, const char*);
SOAP_FMAC3 struct ns__Not * SOAP_FMAC4 soap_in_ns__Not(struct soap*, const char*, struct ns__Not *, const char*);

#ifndef soap_write_ns__Not
#define soap_write_ns__Not(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Not(soap, data), 0) || soap_put_ns__Not(soap, data, "ns:Not", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Not(struct soap*, const struct ns__Not *, const char*, const char*);

#ifndef soap_read_ns__Not
#define soap_read_ns__Not(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Not(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Not * SOAP_FMAC4 soap_get_ns__Not(struct soap*, struct ns__Not *, const char*, const char*);

#define soap_new_ns__Not(soap, n) soap_instantiate_ns__Not(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Not(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Not * SOAP_FMAC2 soap_instantiate_ns__Not(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Not(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__NotResponse
#define SOAP_TYPE_ns__NotResponse (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__NotResponse(struct soap*, struct ns__NotResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__NotResponse(struct soap*, const struct ns__NotResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__NotResponse(struct soap*, const char*, int, const struct ns__NotResponse *, const char*);
SOAP_FMAC3 struct ns__NotResponse * SOAP_FMAC4 soap_in_ns__NotResponse(struct soap*, const char*, struct ns__NotResponse *, const char*);

#ifndef soap_write_ns__NotResponse
#define soap_write_ns__NotResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__NotResponse(soap, data), 0) || soap_put_ns__NotResponse(soap, data, "ns:NotResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__NotResponse(struct soap*, const struct ns__NotResponse *, const char*, const char*);

#ifndef soap_read_ns__NotResponse
#define soap_read_ns__NotResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__NotResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__NotResponse * SOAP_FMAC4 soap_get_ns__NotResponse(struct soap*, struct ns__NotResponse *, const char*, const char*);

#define soap_new_ns__NotResponse(soap, n) soap_instantiate_ns__NotResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__NotResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__NotResponse * SOAP_FMAC2 soap_instantiate_ns__NotResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__NotResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Xor
#define SOAP_TYPE_ns__Xor (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Xor(struct soap*, struct ns__Xor *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Xor(struct soap*, const struct ns__Xor *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Xor(struct soap*, const char*, int, const struct ns__Xor *, const char*);
SOAP_FMAC3 struct ns__Xor * SOAP_FMAC4 soap_in_ns__Xor(struct soap*, const char*, struct ns__Xor *, const char*);

#ifndef soap_write_ns__Xor
#define soap_write_ns__Xor(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Xor(soap, data), 0) || soap_put_ns__Xor(soap, data, "ns:Xor", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Xor(struct soap*, const struct ns__Xor *, const char*, const char*);

#ifndef soap_read_ns__Xor
#define soap_read_ns__Xor(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Xor(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Xor * SOAP_FMAC4 soap_get_ns__Xor(struct soap*, struct ns__Xor *, const char*, const char*);

#define soap_new_ns__Xor(soap, n) soap_instantiate_ns__Xor(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Xor(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Xor * SOAP_FMAC2 soap_instantiate_ns__Xor(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Xor(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__XorResponse
#define SOAP_TYPE_ns__XorResponse (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__XorResponse(struct soap*, struct ns__XorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__XorResponse(struct soap*, const struct ns__XorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__XorResponse(struct soap*, const char*, int, const struct ns__XorResponse *, const char*);
SOAP_FMAC3 struct ns__XorResponse * SOAP_FMAC4 soap_in_ns__XorResponse(struct soap*, const char*, struct ns__XorResponse *, const char*);

#ifndef soap_write_ns__XorResponse
#define soap_write_ns__XorResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__XorResponse(soap, data), 0) || soap_put_ns__XorResponse(soap, data, "ns:XorResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__XorResponse(struct soap*, const struct ns__XorResponse *, const char*, const char*);

#ifndef soap_read_ns__XorResponse
#define soap_read_ns__XorResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__XorResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__XorResponse * SOAP_FMAC4 soap_get_ns__XorResponse(struct soap*, struct ns__XorResponse *, const char*, const char*);

#define soap_new_ns__XorResponse(soap, n) soap_instantiate_ns__XorResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__XorResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__XorResponse * SOAP_FMAC2 soap_instantiate_ns__XorResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__XorResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__And
#define SOAP_TYPE_ns__And (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__And(struct soap*, struct ns__And *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__And(struct soap*, const struct ns__And *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__And(struct soap*, const char*, int, const struct ns__And *, const char*);
SOAP_FMAC3 struct ns__And * SOAP_FMAC4 soap_in_ns__And(struct soap*, const char*, struct ns__And *, const char*);

#ifndef soap_write_ns__And
#define soap_write_ns__And(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__And(soap, data), 0) || soap_put_ns__And(soap, data, "ns:And", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__And(struct soap*, const struct ns__And *, const char*, const char*);

#ifndef soap_read_ns__And
#define soap_read_ns__And(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__And(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__And * SOAP_FMAC4 soap_get_ns__And(struct soap*, struct ns__And *, const char*, const char*);

#define soap_new_ns__And(soap, n) soap_instantiate_ns__And(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__And(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__And * SOAP_FMAC2 soap_instantiate_ns__And(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__And(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__AndResponse
#define SOAP_TYPE_ns__AndResponse (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__AndResponse(struct soap*, struct ns__AndResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__AndResponse(struct soap*, const struct ns__AndResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__AndResponse(struct soap*, const char*, int, const struct ns__AndResponse *, const char*);
SOAP_FMAC3 struct ns__AndResponse * SOAP_FMAC4 soap_in_ns__AndResponse(struct soap*, const char*, struct ns__AndResponse *, const char*);

#ifndef soap_write_ns__AndResponse
#define soap_write_ns__AndResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__AndResponse(soap, data), 0) || soap_put_ns__AndResponse(soap, data, "ns:AndResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__AndResponse(struct soap*, const struct ns__AndResponse *, const char*, const char*);

#ifndef soap_read_ns__AndResponse
#define soap_read_ns__AndResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__AndResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__AndResponse * SOAP_FMAC4 soap_get_ns__AndResponse(struct soap*, struct ns__AndResponse *, const char*, const char*);

#define soap_new_ns__AndResponse(soap, n) soap_instantiate_ns__AndResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__AndResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__AndResponse * SOAP_FMAC2 soap_instantiate_ns__AndResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__AndResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__Or
#define SOAP_TYPE_ns__Or (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__Or(struct soap*, struct ns__Or *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__Or(struct soap*, const struct ns__Or *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__Or(struct soap*, const char*, int, const struct ns__Or *, const char*);
SOAP_FMAC3 struct ns__Or * SOAP_FMAC4 soap_in_ns__Or(struct soap*, const char*, struct ns__Or *, const char*);

#ifndef soap_write_ns__Or
#define soap_write_ns__Or(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__Or(soap, data), 0) || soap_put_ns__Or(soap, data, "ns:Or", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__Or(struct soap*, const struct ns__Or *, const char*, const char*);

#ifndef soap_read_ns__Or
#define soap_read_ns__Or(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__Or(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__Or * SOAP_FMAC4 soap_get_ns__Or(struct soap*, struct ns__Or *, const char*, const char*);

#define soap_new_ns__Or(soap, n) soap_instantiate_ns__Or(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__Or(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__Or * SOAP_FMAC2 soap_instantiate_ns__Or(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__Or(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns__OrResponse
#define SOAP_TYPE_ns__OrResponse (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns__OrResponse(struct soap*, struct ns__OrResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns__OrResponse(struct soap*, const struct ns__OrResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns__OrResponse(struct soap*, const char*, int, const struct ns__OrResponse *, const char*);
SOAP_FMAC3 struct ns__OrResponse * SOAP_FMAC4 soap_in_ns__OrResponse(struct soap*, const char*, struct ns__OrResponse *, const char*);

#ifndef soap_write_ns__OrResponse
#define soap_write_ns__OrResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns__OrResponse(soap, data), 0) || soap_put_ns__OrResponse(soap, data, "ns:OrResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns__OrResponse(struct soap*, const struct ns__OrResponse *, const char*, const char*);

#ifndef soap_read_ns__OrResponse
#define soap_read_ns__OrResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns__OrResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns__OrResponse * SOAP_FMAC4 soap_get_ns__OrResponse(struct soap*, struct ns__OrResponse *, const char*, const char*);

#define soap_new_ns__OrResponse(soap, n) soap_instantiate_ns__OrResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns__OrResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns__OrResponse * SOAP_FMAC2 soap_instantiate_ns__OrResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns__OrResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
